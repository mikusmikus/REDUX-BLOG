{"version":3,"sources":["components/header/header.module.scss","components/typography/typography.module.scss","commonComponents/image/image.module.scss","components/smallPosts/smallPosts.module.scss","components/comments/comments.module.scss","commonComponents/mainBody/mainBody.module.scss","commonComponents/form/form.module.scss","commonComponents/label/label.module.scss","commonComponents/Input/input.module.scss","commonComponents/button/button.module.scss","components/postCard/postCard.module.scss","components/post/post.module.scss","commonComponents/textarea/textarea.module.scss","store/user/types.ts","store/user/reducer.ts","store/blog/types.ts","store/blog/reducer.ts","store/search/types.ts","store/loading/types.ts","store/store.ts","store/search/reducer.ts","store/loading/reducer.ts","reportWebVitals.ts","store/user/action.ts","components/typography/typography.tsx","components/header/header.tsx","commonComponents/mainBody/mainBody.tsx","commonComponents/form/form.tsx","commonComponents/label/label.tsx","commonComponents/Input/input.tsx","commonComponents/button/button.tsx","page/login.tsx","data/authors.ts","helpers/multiplyText.ts","data/categories.ts","store/loading/action.ts","store/blog/action.ts","store/search/action.ts","helpers/formatTime.ts","commonComponents/image/image.tsx","components/postCard/postCard.tsx","page/blog.tsx","page/register.tsx","components/post/post.tsx","components/smallPosts/smallPosts.tsx","commonComponents/textarea/textarea.tsx","components/comments/comments.tsx","page/post.tsx","data/users.ts","commonComponents/datalist/datalist.tsx","components/postEditor/postEditor.tsx","page/newPost.tsx","page/editPost.tsx","page/notFound.tsx","App.tsx","index.tsx"],"names":["module","exports","SAVE_USER_INFO","LOGOUT_USER","initialState","ADD_POSTS","ADD_COMMENTS","ADD_NEW_COMMENT","DELETE_POST","DELETE_COMMENT","ADD_POST","EDIT_POST","INPUT_POST_SEARCH","LOADING","rootReducer","combineReducers","user","state","action","type","blogPosts","length","posts","copyState","index","findIndex","post","postId","comments","cloneDeep","comment","push","splice","commentIndex","commentId","seachPost","value","loading","isLoading","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","addUser","H1","children","propsClass","className","style","heading1","H2","heading2","H3","heading3","H5","heading5","P1","Paragraph1","P2","Paragraph2","Header","dispatch","useDispatch","useSelector","header","icon","faDog","size","blog","navLink","exact","activeClassName","active","to","username","capitalize","status","faUser","faUserCog","faUserSecret","LinkWraper","onClick","localStorage","usersBlogUser","JSON","stringify","MainBody","mainBody","Form","handleSubmit","onSubmit","form","Label","htmlFor","label","Input","onChangeHandler","placeholder","id","required","list","focus","focusRef","useRef","useEffect","current","input","onChange","e","target","ref","Button","handleClick","color","button","padding","backgroundColor","fontSize","LoginPage","useState","nameValue","setNameValue","passwordValue","setPasswordValue","history","useHistory","name","pw","localUsers","parse","usersBlog","preventDefault","loggedUser","find","password","alert","handleLogin","faUserCircle","spin","Authors","multiplyText","text","multiplyTimes","newText","i","categories","changeLoading","addBlogPosts","deletePostAction","addInputSearchValue","formatTime","time","moment","unix","format","Image","src","alt","imageWrapper","image","PostCard","chosenCategory","searchValue","deletePostHandler","handleReadMore","title","body","category","author","updated","postCard","dangerouslySetInnerHTML","splitted","split","outPutString","forEach","item","__html","slice","highlightsText","substring","map","cat","Blog","setChosenCategory","includes","filteredPosts","filter","toLowerCase","chosenCategoryColor","sort","postNext","chosenTag","some","eachCategory","window","confirm","RegisterPage","email","setEmail","setUsername","setPassword","password2","setPassword2","newUser","uuidv4","faRegistered","Post","handlePostEdit","handleToHomePage","SmallPosts","threePosts","setThreePosts","sameCategoryPosts","eachPost","sampleSize","smallPosts","smallPostCard","Textarea","rows","textarea","Comments","deleteCommentHandler","inputCommentValue","commentHandler","commentValueHandler","commentCard","PostPage","commentValue","setCommentValue","useParams","blogPost","scrollTo","top","left","behavior","deleteCommentAction","newComment","users","Datalist","data","PostEditor","SavePostHandler","handleCancel","setTitle","setBody","setImage","category1","setCategory1","category2","setCategory2","onePost","NewPost","newPost","Date","now","localPosts","EditPost","EditPostAction","localPostIndex","localPost","NotFoundPage","App","currentUser","axios","get","random","res","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd171b72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1E5L_\",\"blog\":\"header_blog__1Oq_v\",\"LinkWraper\":\"header_LinkWraper__17HV9\",\"navLink\":\"header_navLink__2Fe5R\",\"user\":\"header_user__1dTLR\",\"paragraph\":\"header_paragraph__3G_h3\",\"active\":\"header_active__2ewzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading1\":\"typography_heading1__3xoqY\",\"heading2\":\"typography_heading2__1w5tJ\",\"heading3\":\"typography_heading3__2TR-O\",\"heading5\":\"typography_heading5__ftbTJ\",\"Paragraph1\":\"typography_Paragraph1__1glaI\",\"Paragraph2\":\"typography_Paragraph2__3hs35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrapper\":\"image_imageWrapper__2iVIx\",\"image\":\"image_image__2hpXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallPosts\":\"smallPosts_smallPosts__w6ZOq\",\"smallPostCard\":\"smallPosts_smallPostCard__3cm_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"comments_comments__vhopa\",\"commentCard\":\"comments_commentCard__Jd_3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBody\":\"mainBody_mainBody__1rC7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3KtoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"label_label__3f6H-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2u2bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3RoOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"postCard_postCard__1nzbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__8TseF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"textarea_textarea__2GCbz\"};","import { UserType } from '../../data/users';\r\n\r\nexport const SAVE_USER_INFO = 'SAVE_USER_INFO';\r\nexport const LOGOUT_USER = 'LOG_OUT_USER';\r\n\r\nexport type SaveUser = {\r\n  type: typeof SAVE_USER_INFO;\r\n  user: UserType;\r\n};\r\n\r\nexport type LogoutUser = {\r\n  type: typeof LOGOUT_USER;\r\n  user: UserType;\r\n};\r\n\r\n\r\nexport type AllUserActions = SaveUser | LogoutUser;\r\n","import {  UserType } from '../../data/users';\r\n\r\nimport { AllUserActions, SAVE_USER_INFO, LOGOUT_USER } from './types';\r\n\r\nconst initialState: UserType = {};\r\n\r\nexport const loginReducer = (state = initialState, action: AllUserActions) => {\r\n  switch (action.type) {\r\n    case SAVE_USER_INFO: {\r\n      return action.user;\r\n    }\r\n    case LOGOUT_USER: {\r\n      return {};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_POSTS = 'ADD_POSTS';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const ADD_NEW_COMMENT = 'ADD_NEW_COMMENT';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const EDIT_POST = 'EDIT_POST';\r\n\r\nexport type Comment = {\r\n  commentId: string;\r\n  postId: string;\r\n  email: string;\r\n  body: string;\r\n};\r\n\r\nexport type Category = 'sport' | 'cars' | 'music' | 'life' | 'people' | 'news';\r\n\r\nexport type PostType = {\r\n  postId: string;\r\n  title: string;\r\n  body: string;\r\n  author: string;\r\n  image: string;\r\n  updated: number;\r\n  category: string[];\r\n  comments: Comment[];\r\n};\r\n\r\nexport type BlogPostAction = {\r\n  type: typeof ADD_POSTS;\r\n  posts: PostType[];\r\n};\r\n\r\nexport type BlogCommentsAction = {\r\n  type: typeof ADD_COMMENTS;\r\n  comments: Comment[];\r\n};\r\n\r\nexport type NewCommentAction = {\r\n  type: typeof ADD_NEW_COMMENT;\r\n  comment: Comment;\r\n};\r\nexport type DeletePostAction = {\r\n  type: typeof DELETE_POST;\r\n  postId: string;\r\n};\r\n\r\nexport type DeleteCommentAction = {\r\n  type: typeof DELETE_COMMENT;\r\n  commentId: string;\r\n  postId: string;\r\n};\r\n\r\nexport type AddPostAction = {\r\n  type: typeof ADD_POST;\r\n  post: PostType;\r\n};\r\n\r\nexport type EditPostAction = {\r\n  type: typeof EDIT_POST;\r\n  post: PostType;\r\n};\r\n\r\nexport type AllActions =\r\n  | BlogPostAction\r\n  | BlogCommentsAction\r\n  | NewCommentAction\r\n  | DeletePostAction\r\n  | DeleteCommentAction\r\n  | EditPostAction\r\n  | AddPostAction;\r\n","import { act } from '@testing-library/react';\r\nimport { cloneDeep } from 'lodash';\r\nimport {\r\n  AllActions,\r\n  PostType,\r\n  ADD_POSTS,\r\n  ADD_COMMENTS,\r\n  ADD_NEW_COMMENT,\r\n  DELETE_COMMENT,\r\n  DELETE_POST,\r\n  EDIT_POST,\r\n  ADD_POST,\r\n} from './types';\r\n\r\nconst initialState: PostType[] = [];\r\n\r\nexport const blogPostsReducer = (state = initialState, action: AllActions) => {\r\n  switch (action.type) {\r\n    case ADD_POSTS: {\r\n      if (state.length === 0) {\r\n        return action.posts;\r\n      }\r\n      return state;\r\n    }\r\n    case ADD_COMMENTS: {\r\n      const copyState = [...state];\r\n      const index = copyState.findIndex((post) => post.postId === action.comments[0].postId);\r\n      copyState[index].comments = action.comments;\r\n      return copyState;\r\n    }\r\n    case ADD_NEW_COMMENT: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.comment.postId);\r\n      copyState[index].comments.push(action.comment);\r\n      return copyState;\r\n    }\r\n\r\n    case DELETE_POST: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.postId);\r\n      copyState.splice(index, 1);\r\n      return copyState;\r\n    }\r\n\r\n    case DELETE_COMMENT: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.postId);\r\n      const commentIndex = copyState[index].comments.findIndex(\r\n        (comment) => comment.commentId === action.commentId\r\n      );\r\n      copyState[index].comments.splice(commentIndex, 1);\r\n      return copyState;\r\n    }\r\n\r\n    case EDIT_POST: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.post.postId);\r\n      copyState.splice(index, 1, action.post);\r\n      return copyState;\r\n    }\r\n\r\n    case ADD_POST: {\r\n      const copyState = cloneDeep(state);\r\n      copyState.push(action.post);\r\n      return copyState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const INPUT_POST_SEARCH = 'INPUT_POST_SEARCH';\r\n\r\n\r\nexport type InputSearchPost = {\r\n  type: typeof INPUT_POST_SEARCH;\r\n  value: string;\r\n};\r\n\r\n\r\n","export const LOADING = 'LOADING';\r\n\r\nexport type ChangeLoadingAction = {\r\n  type: typeof LOADING;\r\n  isLoading:boolean\r\n};\r\n\r\n\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { loginReducer } from './user/reducer';\r\nimport { blogPostsReducer } from './blog/reducer';\r\nimport { seachPostReducer } from './search/reducer';\r\n\r\nimport { loadingReducer } from './loading/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: loginReducer,\r\n  blogPosts: blogPostsReducer,\r\n  seachPost: seachPostReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { InputSearchPost, INPUT_POST_SEARCH } from './types';\r\n\r\n\r\n\r\n\r\nexport const seachPostReducer = (state = '', action: InputSearchPost) => {\r\n  switch (action.type) {\r\n    case INPUT_POST_SEARCH: {\r\n      return action.value;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ChangeLoadingAction, LOADING } from './types';\r\n\r\nexport const loadingReducer = (state = false, action: ChangeLoadingAction) => {\r\n  switch (action.type) {\r\n    case LOADING: {\r\n      return action.isLoading;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SAVE_USER_INFO, LOGOUT_USER } from './types';\r\nimport { UserType } from '../../data/users';\r\n\r\nexport const addUser = (user: UserType) => {\r\n  return {\r\n    type: SAVE_USER_INFO,\r\n    user,\r\n  };\r\n};\r\n\r\nexport const LogOutUser = () => {\r\n  return {\r\n    type: LOGOUT_USER,\r\n  };\r\n};\r\n","/* eslint-disable react/no-danger */\r\nimport React, { FC } from 'react';\r\nimport style from './typography.module.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  propsClass?: string;\r\n};\r\n\r\nexport const H1: FC<Props> = ({ children, propsClass, }) => {\r\n  return <h1 className={`${style.heading1} ${propsClass}`}>{children}</h1>;\r\n};\r\n\r\nexport const H2: FC<Props> = ({ children, propsClass }) => {\r\n  return <h2 className={`${style.heading2} ${propsClass}`}>{children}</h2>;\r\n};\r\n\r\nexport const H3: FC<Props> = ({ children, propsClass }) => {\r\n  return <h3 className={`${style.heading3} ${propsClass}`}>{children}</h3>;\r\n};\r\nexport const H4: FC<Props> = ({ children, propsClass }) => {\r\n  return <h4 className={`${style.heading4} ${propsClass}`}>{children}</h4>;\r\n};\r\nexport const H5: FC<Props> = ({ children, propsClass }) => {\r\n  return <h5 className={`${style.heading5} ${propsClass}`}>{children}</h5>;\r\n};\r\nexport const P1: FC<Props> = ({ children, propsClass }) => {\r\n  return <p className={`${style.Paragraph1} ${propsClass}`}>{children}</p>;\r\n};\r\nexport const P2: FC<Props> = ({ children, propsClass }) => {\r\n  return <p className={`${style.Paragraph2} ${propsClass}`}>{children}</p>;\r\n};\r\n","import React, { FC } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faUserSecret, faDog, faUserCog } from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport { capitalize } from 'lodash';\nimport type { RootState } from '../../store/store';\nimport { LogOutUser } from '../../store/user/action';\nimport type { UserType } from '../../data/users';\nimport style from './header.module.scss';\nimport { H5, P2 } from '../typography/typography';\n\nexport const Header: FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state: RootState): UserType => state.user);\n\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-10 col-xs-offset-1\">\n            <div className={style.header}>\n              <div className=\"row center-xs\">\n                <div className=\"col-md-2 col-xs-4\">\n                  <FontAwesomeIcon icon={faDog} size=\"6x\" />\n                </div>\n                <div className=\"col-md-3 col-xs-4\">\n                  <div className={style.blog}>\n                    <NavLink className={style.navLink} exact activeClassName={style.active} to=\"/\">\n                      blog\n                    </NavLink>\n                  </div>\n                </div>\n                <div className=\"col-md-5 col-xs-12 last-xs\">\n                  <div className={style.user}>\n                    {user.username ? (\n                      <H5>\n                        Hello, {capitalize(user.username)}!{' '}\n                        {user.status === 'user' ? (\n                          <FontAwesomeIcon icon={faUser} />\n                        ) : (\n                          <FontAwesomeIcon icon={faUserCog} />\n                        )}{' '}\n                      </H5>\n                    ) : (\n                      <>\n                        <H5>\n                          Hello, Guest! <FontAwesomeIcon icon={faUserSecret} />\n                        </H5>\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-2 col-xs-4 last-md\">\n                  <div className={style.LinkWraper}>\n                    {!user.username ? (\n                      <>\n                        <NavLink\n                          className={style.navLink}\n                          exact\n                          activeClassName={style.active}\n                          to=\"/login\"\n                        >\n                          login\n                        </NavLink>\n                        <NavLink\n                          className={style.navLink}\n                          exact\n                          activeClassName={style.active}\n                          to=\"/register\"\n                        >\n                          register\n                        </NavLink>\n                      </>\n                    ) : (\n                      <>\n                        <NavLink\n                          className={style.navLink}\n                          exact\n                          activeClassName={style.active}\n                          to=\"/login\"\n                          onClick={() => {\n                            dispatch(LogOutUser());\n                            localStorage.usersBlogUser = JSON.stringify({});\n                          }}\n                        >\n                          logout\n                        </NavLink>\n                        <P2 propsClass=\"padding--0\">\n                          {user.status}{' '}\n                          {user.status === 'user' ? (\n                            <FontAwesomeIcon icon={faUser} />\n                          ) : (\n                            <FontAwesomeIcon icon={faUserCog} />\n                          )}\n                        </P2>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React, { FC } from 'react';\r\nimport style from './mainBody.module.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  propsClass?: string;\r\n};\r\n\r\nconst MainBody: FC<Props> = ({ propsClass, children }) => {\r\n  return <div className={`${style.mainBody} ${propsClass}`}>{children}</div>;\r\n};\r\n\r\nexport default MainBody;\r\n","import React, { FC } from 'react';\r\nimport style from './form.module.scss';\r\n\r\ntype Props = {\r\n  handleSubmit?: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  propsClass?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Form: FC<Props> = ({ handleSubmit, children, propsClass }) => {\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit} className={`${style.form} ${propsClass}`}>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { FC } from 'react';\r\nimport style from './label.module.scss';\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  propsClass?: string;\r\n  htmlFor?: string;\r\n};\r\n\r\nconst Label: FC<Props> = ({ children, htmlFor, propsClass }) => {\r\n  return (\r\n    <label htmlFor={htmlFor} className={`${style.label} ${propsClass}`}>\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React, { FC, useRef, useEffect } from 'react';\r\nimport style from './input.module.scss';\r\n\r\ntype Props = {\r\n  value: string;\r\n  onChangeHandler: (value: string) => void;\r\n  type?: 'text' | 'email' | 'password' | 'search';\r\n  placeholder?: string;\r\n  propsClass?: string;\r\n  id?: string;\r\n  required?: boolean;\r\n  list?: string;\r\n  focus?: boolean;\r\n};\r\n\r\nconst Input: FC<Props> = ({\r\n  value,\r\n  onChangeHandler,\r\n  placeholder = 'placeholder here...',\r\n  id,\r\n  required = false,\r\n  propsClass,\r\n  list,\r\n  type = 'text',\r\n  focus = false,\r\n}) => {\r\n\r\n  const focusRef = useRef<HTMLInputElement>(null);\r\n  \r\n  useEffect(() => {\r\n    focus && focusRef.current?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <input\r\n      className={`${style.input} ${propsClass}`}\r\n      list={list}\r\n      type={type}\r\n      onChange={(e) => onChangeHandler(e.target.value)}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      id={id}\r\n      required={required}\r\n      ref={focusRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","/* eslint-disable react/button-has-type */\r\nimport React, { FC } from 'react';\r\nimport style from './button.module.scss';\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  size?: 'small' | 'medium' | 'large';\r\n  color?: 'primary' | 'success' | 'warning';\r\n  handleClick?: () => void;\r\n  propsClass?: string;\r\n};\r\n\r\nconst Button: FC<Props> = ({\r\n  children = 'button',\r\n  type = 'button',\r\n  handleClick,\r\n  propsClass,\r\n  size = 'medium',\r\n  color = 'primary',\r\n}) => {\r\n  const buttonSize = () => {\r\n    if (size === 'small') return '4px 8px';\r\n    if (size === 'large') return '12px 32px';\r\n    return '6px 16px';\r\n  };\r\n  const buttonColor = () => {\r\n    if (color === 'success') return '#fca311';\r\n    if (color === 'warning') return '#cc6b6b';\r\n    return '#e5e5e5';\r\n  };\r\n\r\n  const fontSize = () => {\r\n    if (size === 'small') return '16px';\r\n    if (size === 'large') return '32px';\r\n    return '24px';\r\n  };\r\n  return (\r\n    <button\r\n      className={`${style.button} ${propsClass}`}\r\n      type={type}\r\n      style={{ padding: buttonSize(), backgroundColor: buttonColor(), fontSize: fontSize() }}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { addUser } from '../store/user/action';\r\nimport { UserType } from '../data/users';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport Form from '../commonComponents/form/form';\r\nimport Label from '../commonComponents/label/label';\r\nimport Input from '../commonComponents/Input/input';\r\nimport Button from '../commonComponents/button/button';\r\nimport { H1 } from '../components/typography/typography';\r\n\r\nconst LoginPage = () => {\r\n  const [nameValue, setNameValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  \r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogin = (e: React.FormEvent<HTMLFormElement>, name: string, pw: string) => {\r\n    const localUsers: UserType[] = JSON.parse(localStorage.usersBlog || '[]');\r\n    if (localUsers.length === 0) {\r\n      alert('wrong username or password');\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    const loggedUser = localUsers.find((user) => user.username === name && user.password === pw);\r\n    if (loggedUser) {\r\n      localStorage.usersBlogUser = JSON.stringify(loggedUser);\r\n      dispatch(addUser(loggedUser));\r\n      setNameValue('');\r\n      setPasswordValue('');\r\n      history.push('./');\r\n    } else {\r\n      alert('wrong username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is LOGIN Page</H1>\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-8\">\r\n                <Form handleSubmit={(e) => handleLogin(e, nameValue, passwordValue)}>\r\n                  <FontAwesomeIcon icon={faUserCircle} size=\"3x\" spin />\r\n                  <div className=\"row center-xs\">\r\n                    <div className=\"col-sm-8 col-xs-12\">\r\n                      <Label htmlFor=\"username\">Username</Label>\r\n                      <Input\r\n                        placeholder=\"Enter username\"\r\n                        value={nameValue}\r\n                        onChangeHandler={(value) => setNameValue(value)}\r\n                        id=\"username\"\r\n                        required\r\n                        focus\r\n                      />\r\n\r\n                      <Label htmlFor=\"password\">password</Label>\r\n                      <Input\r\n                        placeholder=\"Enter Password\"\r\n                        value={passwordValue}\r\n                        onChangeHandler={(value) => setPasswordValue(value)}\r\n                        id=\"password\"\r\n                        required\r\n                        type=\"password\"\r\n                        propsClass='margin-bottom--32'\r\n                      />\r\n\r\n                      <Button type=\"submit\" size='large' color='success'>\r\n                        Login\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","export const Authors = ['Mikus', 'Gatis', 'Jānis', 'Mārtiņš', 'Vitālijs', 'Estere', 'Aina', 'Ieva'];\r\n","export const multiplyText = (text: string, multiplyTimes: number) => {\r\n  let newText = text;\r\n  for (let i = 0; i < multiplyTimes; i++) {\r\n    newText += text;\r\n    newText += ' ';\r\n  }\r\n  return newText;\r\n};\r\n","export const categories = ['life', 'cars', 'nature', 'health', 'sport', 'music', 'house', 'summer'];\r\n","import { LOADING } from './types';\r\n\r\nexport const changeLoading = (isLoading:boolean) => {\r\n  return {\r\n    type: LOADING,\r\n    isLoading\r\n  };\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport { sampleSize, random } from 'lodash';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_POSTS,\r\n  ADD_COMMENTS,\r\n  ADD_NEW_COMMENT,\r\n  DELETE_COMMENT,\r\n  DELETE_POST,\r\n  EDIT_POST,\r\n  ADD_POST,\r\n  PostType,\r\n  Comment,\r\n} from './types';\r\nimport { Authors } from '../../data/authors';\r\nimport { multiplyText } from '../../helpers/multiplyText';\r\nimport { categories } from '../../data/categories';\r\nimport { changeLoading } from '../loading/action';\r\n\r\nexport const addBlogPosts = (posts: PostType[]) => {\r\n  return {\r\n    type: ADD_POSTS,\r\n    posts,\r\n  };\r\n};\r\n\r\nexport const addComments = (comments: Comment[]) => {\r\n  return {\r\n    type: ADD_COMMENTS,\r\n    comments,\r\n  };\r\n};\r\n\r\nexport const addCommentHandler = (comment: Comment) => {\r\n  return {\r\n    type: ADD_NEW_COMMENT,\r\n    comment,\r\n  };\r\n};\r\n\r\nexport const deletePostAction = (postId: string) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    postId,\r\n  };\r\n};\r\n\r\nexport const deleteCommentAction = (commentId: string, postId: string) => {\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    commentId,\r\n    postId,\r\n  };\r\n};\r\n\r\nexport const AddPostAction = (post: PostType) => {\r\n  return {\r\n    type: ADD_POST,\r\n    post\r\n  };\r\n};\r\nexport const EditPostAction = (post: PostType) => {\r\n  return {\r\n    type: EDIT_POST,\r\n    post\r\n  };\r\n};\r\n\r\nexport const getPostsData = () => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(changeLoading(true));\r\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(({ data }) => {\r\n      const posts: PostType[] = data.map((post: { id: number; title: string; body: string }) => ({\r\n        postId: `${post.id}`,\r\n        title: post.title,\r\n        body: multiplyText(post.body, 6),\r\n        author: Authors[random(Authors.length-1)],\r\n        image: `https://picsum.photos/id/${post.id + 5}/500/500`,\r\n        updated: Date.now() - random(10000),\r\n        category: sampleSize(categories, 2),\r\n        comments: [],\r\n      }));\r\n      axios.get('https://jsonplaceholder.typicode.com/comments').then((res) => {\r\n        const comments: Comment[] = res.data.map(\r\n          (comment: { id: number; postId: number; email: string; body: string }) => ({\r\n            commentId: `${comment.id}`,\r\n            postId: `${comment.postId}`,\r\n            email: comment.email,\r\n            body: comment.body,\r\n          })\r\n        );\r\n\r\n        posts.forEach((post: PostType) => {\r\n          comments.forEach((comment: Comment) => {\r\n            if (post.postId === comment.postId) {\r\n              post.comments.push(comment);\r\n            }\r\n          });\r\n        });\r\n        dispatch(addBlogPosts(posts));\r\n        dispatch(changeLoading(false));\r\n        const localPosts = JSON.parse(localStorage.blogPosts || '[]');\r\n        if (localPosts.length === 0) {\r\n          localStorage.blogPosts = JSON.stringify(posts);\r\n        }\r\n      });\r\n    });\r\n  };\r\n};\r\n","import { INPUT_POST_SEARCH } from './types';\r\n\r\nexport const addInputSearchValue = (value: string) => {\r\n  return {\r\n    type: INPUT_POST_SEARCH,\r\n    value,\r\n  };\r\n};\r\n","import moment from 'moment';\r\n\r\nexport const formatTime = (time: number) => {\r\n  const convertedTime = moment.unix(time / 1000).format('MMMM Do, h:mm:ss a');\r\n  return convertedTime;\r\n};\r\n","import React, { FC } from 'react';\r\nimport style from './image.module.scss';\r\n\r\ntype Props = {\r\n  src?: string;\r\n  alt? :string\r\n  propsClass?: string;\r\n};\r\n\r\nconst Image: FC<Props> = ({ src, alt, propsClass }) => {\r\n  return (\r\n    <div className={`${style.imageWrapper} ${propsClass}`}>\r\n      <img src={src} alt={alt} className={style.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","/* eslint-disable max-len */\r\nimport React, { FC } from 'react';\r\nimport { formatTime } from '../../helpers/formatTime';\r\nimport { PostType } from '../../store/blog/types';\r\nimport { H3, P1, P2 } from '../typography/typography';\r\nimport Button from '../../commonComponents/button/button';\r\nimport style from './postCard.module.scss';\r\nimport Image from '../../commonComponents/image/image';\r\nimport { UserType } from '../../data/users';\r\n\r\ntype Props = {\r\n  user: UserType;\r\n  post: PostType;\r\n  chosenCategory: string;\r\n  searchValue: string;\r\n  deletePostHandler: () => void;\r\n  handleReadMore: () => void;\r\n};\r\nconst PostCard: FC<Props> = ({\r\n  post,\r\n  chosenCategory,\r\n  user,\r\n  searchValue,\r\n  deletePostHandler,\r\n  handleReadMore,\r\n}) => {\r\n  const { title, body, image, category, author, updated, comments } = post;\r\n\r\n  const highlightsText = () => {\r\n    const splitted = title.split(searchValue);\r\n    let outPutString = '';\r\n\r\n    splitted.forEach((item) => {\r\n      outPutString += `<span>${item}</span><span class='apricot'>${searchValue}</span>`;\r\n    });\r\n    const realOutput = outPutString.slice(0, outPutString.length - 30 - searchValue.length);\r\n    return { __html: realOutput };\r\n  };\r\n\r\n  return (\r\n    <div className={style.postCard}>\r\n      <div className=\"row end-xs\">\r\n        <div className=\"col-xs-12\">\r\n          {user.status === 'admin' && (\r\n            <Button handleClick={deletePostHandler} color=\"warning\" size=\"small\">\r\n              Delete Post\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {!searchValue ? (\r\n            <H3>{title}</H3>\r\n          ) : (\r\n            <h3 className=\"heading3\" dangerouslySetInnerHTML={highlightsText()} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-3\">\r\n          <Image src={image} alt={title} />\r\n        </div>\r\n        <div className=\"col-xs-9\">\r\n          <P1 propsClass=\"margin-bottom--16\">\r\n            {body.substring(0, 200)}\r\n            {'... '}\r\n            <Button type=\"button\" handleClick={handleReadMore} propsClass=\"ReadMore\">\r\n              Read more...\r\n            </Button>\r\n          </P1>\r\n\r\n          <P2>\r\n            category:{' '}\r\n            {category.map((cat) => (\r\n              <em key={cat} className={`${chosenCategory === cat && 'apricot'}`}>\r\n                #{cat}{' '}\r\n              </em>\r\n            ))}\r\n          </P2>\r\n          <P2>\r\n            Author : <em>{author}</em>\r\n            {',  '}\r\n            Updated :{' '}\r\n            <em>\r\n              {formatTime(updated)}\r\n              {',  '}\r\n            </em>\r\n            Comments :{' '}\r\n            <em>\r\n              {comments.length}\r\n              {'  '}\r\n            </em>\r\n          </P2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deletePostAction } from '../store/blog/action';\r\nimport { addInputSearchValue } from '../store/search/action';\r\nimport { RootState } from '../store/store';\r\nimport { H1, H3 } from '../components/typography/typography';\r\nimport Button from '../commonComponents/button/button';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport Input from '../commonComponents/Input/input';\r\nimport PostCard from '../components/postCard/postCard';\r\nimport Image from '../commonComponents/image/image';\r\n\r\nexport const categories = ['all'];\r\n\r\nconst Blog = () => {\r\n  const [chosenCategory, setChosenCategory] = useState('all');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { posts, searchValue, loading, user } = useSelector((state: RootState) => ({\r\n    posts: state.blogPosts,\r\n    searchValue: state.seachPost,\r\n    loading: state.loading,\r\n    user: state.user,\r\n  }));\r\n\r\n  posts.forEach((post) =>\r\n    post.category.forEach((category) => {\r\n      if (!categories.includes(category)) {\r\n        categories.push(category);\r\n      }\r\n    })\r\n  );\r\n\r\n  const handleReadMore = (id: string) => {\r\n    history.push(`/blog/${id}`);\r\n  };\r\n\r\n  const deletePostHandler = (id: string) => {\r\n    window.confirm('Are you sure want to delete post?') && dispatch(deletePostAction(id));\r\n  };\r\n\r\n  const handlePostSearch = (value: string) => {\r\n    if (value.length > 1) {\r\n      setChosenCategory('all');\r\n    }\r\n    dispatch(addInputSearchValue(value));\r\n  };\r\n\r\n  const sortPostsCategory = (category: string[], chosenTag: string) => {\r\n    if (chosenTag === 'all') {\r\n      return true;\r\n    }\r\n    return category.some((eachCategory) => eachCategory === chosenTag);\r\n  };\r\n\r\n  const filteredPosts = posts.filter((post) =>\r\n    post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n  );\r\n\r\n  const chosenCategoryColor = (category: string): 'success' | 'primary' => {\r\n    if (category === chosenCategory) {\r\n      return 'success';\r\n    }\r\n    return 'primary';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-10 col-xs-offset-1\">\r\n            <MainBody>\r\n              <H1>loading...</H1>\r\n            </MainBody>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Blog Page</H1>\r\n            <div className=\"row end-xs\">\r\n              <div className=\"col-xs-12 margin-right--16\">\r\n                {user.username && (\r\n                  <Button\r\n                    type=\"button\"\r\n                    handleClick={() => history.push('/newpost')}\r\n                    size=\"large\"\r\n                    color=\"success\"\r\n                  >\r\n                    New Post\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4 col-xs-8 margin-left--16\">\r\n                <Input\r\n                  type=\"search\"\r\n                  placeholder=\"Find post by title here...\"\r\n                  value={searchValue}\r\n                  onChangeHandler={handlePostSearch}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 margin-left--16\">\r\n                {categories.map((category) => (\r\n                  <Button\r\n                    type=\"button\"\r\n                    key={category}\r\n                    color={chosenCategoryColor(category)}\r\n                    handleClick={() => {\r\n                      setChosenCategory(category);\r\n                      dispatch(addInputSearchValue(''));\r\n                    }}\r\n                  >\r\n                    <em>#{category}</em>\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <>\r\n              {!filteredPosts.length ? (\r\n                <>\r\n                  <H3>Can not find any posts...</H3>\r\n                  <Image\r\n                    src=\"https://aubankaitis.files.wordpress.com/2014/04/search_600.jpg\"\r\n                    alt=\"..\"\r\n                  />\r\n                </>\r\n              ) : (\r\n                filteredPosts\r\n                  .sort((post, postNext) => postNext.updated - post.updated)\r\n                  .map(\r\n                    (post) =>\r\n                      sortPostsCategory(post.category, chosenCategory) && (\r\n                        <PostCard\r\n                          user={user}\r\n                          chosenCategory={chosenCategory}\r\n                          key={post.postId}\r\n                          searchValue={searchValue}\r\n                          post={post}\r\n                          deletePostHandler={() => deletePostHandler(post.postId)}\r\n                          handleReadMore={() => handleReadMore(post.postId)}\r\n                        />\r\n                      )\r\n                  )\r\n              )}\r\n            </>\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRegistered } from '@fortawesome/free-solid-svg-icons';\r\nimport Button from '../commonComponents/button/button';\r\nimport Form from '../commonComponents/form/form';\r\nimport Input from '../commonComponents/Input/input';\r\nimport Label from '../commonComponents/label/label';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport { H1 } from '../components/typography/typography';\r\nimport { UserType } from '../data/users';\r\nimport { addUser } from '../store/user/action';\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleRegister = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const localUsers: UserType[] = JSON.parse(localStorage.usersBlog || '[]');\r\n    if (localUsers.some((user) => user.username === username)) {\r\n      alert('username already exists, try other!');\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      alert('passwords do not match');\r\n      return;\r\n    }\r\n    const newUser: UserType = {\r\n      id: uuidv4(),\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n    localUsers.push(newUser);\r\n    localStorage.usersBlog = JSON.stringify(localUsers);\r\n    dispatch(addUser(newUser));\r\n    history.push('./');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Register Page</H1>\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-8\">\r\n                <Form handleSubmit={handleRegister}>\r\n                  <FontAwesomeIcon icon={faRegistered} size=\"3x\" spin />\r\n                  <div className=\"row center-xs\">\r\n                    <div className=\"col-sm-8 col-xs-12\">\r\n                      <Label htmlFor=\"email\">Email</Label>\r\n                      <Input\r\n                        placeholder=\"Enter email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChangeHandler={(value) => setEmail(value)}\r\n                        id=\"email\"\r\n                        required\r\n                        focus\r\n                      />\r\n                      <Label htmlFor=\"username\">Username</Label>\r\n                      <Input\r\n                        placeholder=\"Enter username\"\r\n                        value={username}\r\n                        onChangeHandler={(value) => setUsername(value)}\r\n                        id=\"username\"\r\n                        required\r\n                      />\r\n                      <Label htmlFor=\"password\">Password</Label>\r\n                      <Input\r\n                        placeholder=\"Enter password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChangeHandler={(value) => setPassword(value)}\r\n                        id=\"password\"\r\n                        required\r\n                      />\r\n                      <Label propsClass=\"commentLabel\" htmlFor=\"password2\">\r\n                        Password\r\n                      </Label>\r\n                      <Input\r\n                        placeholder=\"Enter password again\"\r\n                        type=\"password\"\r\n                        value={password2}\r\n                        onChangeHandler={(value) => setPassword2(value)}\r\n                        id=\"password2\"\r\n                        required\r\n                        propsClass='margin-bottom--32'\r\n                      />\r\n\r\n                      <Button type=\"submit\" size='large' color='success'>\r\n                        Register\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { FC } from 'react';\r\nimport Button from '../../commonComponents/button/button';\r\nimport Image from '../../commonComponents/image/image';\r\nimport { formatTime } from '../../helpers/formatTime';\r\nimport { H2, P1, P2 } from '../typography/typography';\r\nimport style from './post.module.scss';\r\nimport { PostType } from '../../store/blog/types';\r\nimport { UserType } from '../../data/users';\r\n\r\ntype Props = {\r\n  user: UserType;\r\n  post: PostType;\r\n  handlePostEdit: () => void;\r\n  handleToHomePage: () => void;\r\n  deletePostHandler: () => void;\r\n};\r\n\r\nconst Post: FC<Props> = ({ post, user, handlePostEdit, handleToHomePage, deletePostHandler }) => {\r\n  const { title, image, category, body, author, updated } = post;\r\n\r\n  return (\r\n    <div className={style.post}>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <Button handleClick={handleToHomePage} color=\"success\">\r\n            Back to Blogs\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-xs-12\">\r\n          <H2>{title}</H2>\r\n        </div>\r\n        <div className=\"col-xs-6\">\r\n          <Image src={image} alt={title} />\r\n        </div>\r\n        <div className=\"col-xs-6\">\r\n          <div className=\"row end-xs\">\r\n            <div className=\"col-xs-12\">\r\n              {(user.username?.toLowerCase() === author.toLowerCase() || user.status==='admin') && (\r\n                <Button handleClick={handlePostEdit} color=\"success\">\r\n                  Edit post\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <div className=\"col-xs-12\">\r\n              {user.status === 'admin' && (\r\n                <Button handleClick={deletePostHandler} size=\"small\" color=\"warning\">Delete post</Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <P2>\r\n            Author :{' '}\r\n            <em>\r\n              {author}\r\n              {'  '}\r\n            </em>\r\n          </P2>\r\n          <P2>\r\n            category:{' '}\r\n            {category.map((cat) => (\r\n              <em key={cat}>#{cat} </em>\r\n            ))}\r\n          </P2>\r\n          <P2>\r\n            Updated :{' '}\r\n            <em>\r\n              {formatTime(updated)}\r\n              {',  '}\r\n            </em>\r\n          </P2>\r\n        </div>\r\n        <div className=\"col-xs-12\">\r\n          <P1>{body}</P1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport { sampleSize } from 'lodash';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Image from '../../commonComponents/image/image';\r\nimport Button from '../../commonComponents/button/button';\r\nimport { PostType } from '../../store/blog/types';\r\nimport { H2, H3, H5, P2 } from '../typography/typography';\r\nimport { RootState } from '../../store/store';\r\nimport style from './smallPosts.module.scss';\r\n\r\ntype Props = {\r\n  post: PostType;\r\n  id: string;\r\n};\r\n\r\nconst SmallPosts: FC<Props> = ({ post, id }) => {\r\n  const [threePosts, setThreePosts] = useState<PostType[]>([]);\r\n  const history = useHistory();\r\n\r\n  const sameCategoryPosts = useSelector((state: RootState) =>\r\n    state.blogPosts.filter((eachPost) =>\r\n      eachPost.category.some(\r\n        (category: string) => category === post?.category[0] || category === post?.category[1]\r\n      )\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    setThreePosts(sampleSize(sameCategoryPosts, 3));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className={style.smallPosts}>\r\n      <H2>Similar category posts</H2>\r\n      <div className=\"row center-xs\">\r\n        {threePosts.length === 1 ? (\r\n          <H3>No similar posts...</H3>\r\n        ) : (\r\n          <>\r\n            {threePosts.map(({ postId, image, title, author, category }) => (\r\n              <div className=\"col-xs-4\" key={postId}>\r\n                <div className={style.smallPostCard} key={postId}>\r\n                  <Image src={image} alt={title} />\r\n                  <H5>{title.substring(0, 50)}</H5>\r\n                  <P2>\r\n                    category:{' '}\r\n                    {category.map((cat: string) => (\r\n                      <em key={cat}>{cat} </em>\r\n                    ))}\r\n                  </P2>\r\n                  <P2>author:<em> {author}</em></P2>\r\n                  <Button type=\"button\" handleClick={() => history.push(`/blog/${postId}`)}>\r\n                    Read more...\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallPosts;\r\n","import React, { FC } from 'react';\r\nimport style from './textarea.module.scss';\r\n\r\ntype Props = {\r\n  value: string;\r\n  placeholder?: string;\r\n  children?: React.ReactNode;\r\n  rows?: number;\r\n  propsClass?: string;\r\n  id?: string;\r\n  required?: boolean;\r\n  onChangeHandler: (value: string) => void;\r\n};\r\n\r\nconst Textarea: FC<Props> = ({\r\n  children,\r\n  propsClass,\r\n  id,\r\n  required,\r\n  rows=10,\r\n  value,\r\n  placeholder = 'Enter text here',\r\n  onChangeHandler,\r\n}) => {\r\n  return (\r\n    <textarea\r\n      className={`${style.textarea} ${propsClass}`}\r\n      placeholder={placeholder}\r\n      rows={rows}\r\n      value={value}\r\n      id={id}\r\n      required={required}\r\n      onChange={(e) => onChangeHandler(e.target.value)}\r\n    >\r\n      {children}\r\n    </textarea>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import React, { FC } from 'react';\r\nimport Button from '../../commonComponents/button/button';\r\nimport { H2, H3, P2 } from '../typography/typography';\r\nimport { PostType } from '../../store/blog/types';\r\nimport style from './comments.module.scss';\r\nimport Textarea from '../../commonComponents/textarea/textarea';\r\nimport { UserType } from '../../data/users';\r\n\r\ntype Props = {\r\n  post: PostType;\r\n  user: UserType;\r\n  inputCommentValue: string;\r\n  deleteCommentHandler: (commentId: string) => void;\r\n  commentHandler: () => void;\r\n  commentValueHandler: (e: string) => void;\r\n};\r\n\r\nconst Comments: FC<Props> = ({\r\n  post,\r\n  user,\r\n  deleteCommentHandler,\r\n  inputCommentValue,\r\n  commentHandler,\r\n  commentValueHandler,\r\n}) => {\r\n  const { comments } = post;\r\n\r\n  return (\r\n    <div className={style.comments}>\r\n      <H2>Comments</H2>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {comments.map(({ commentId, email, body }) => (\r\n            <div className={style.commentCard} key={commentId}>\r\n              <div className=\"col-xs-4\">\r\n                <P2>{email}</P2>\r\n                {user.status === 'admin' && (\r\n                  <Button handleClick={() => deleteCommentHandler(commentId)} size=\"small\" color=\"warning\">Delete comment</Button>\r\n                )}\r\n              </div>\r\n              <div className=\"col-xs-8\">\r\n                <P2>{body}</P2>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"row center-xs\">\r\n        {user.email ? (\r\n          <div className=\"col-xs-12\">\r\n            <Textarea\r\n              required\r\n              id=\"textarea\"\r\n              placeholder=\"Add comment here...\"\r\n              value={inputCommentValue}\r\n              rows={3}\r\n              onChangeHandler={commentValueHandler}\r\n            >\r\n              {inputCommentValue}\r\n            </Textarea>\r\n            <Button handleClick={() => commentHandler()}>Save Comment</Button>\r\n          </div>\r\n        ) : (\r\n          <H3> You need to login to comment...</H3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../store/store';\r\nimport { Comment } from '../store/blog/types';\r\nimport { addCommentHandler, deleteCommentAction, deletePostAction } from '../store/blog/action';\r\nimport { H1 } from '../components/typography/typography';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport Post from '../components/post/post';\r\nimport SmallPosts from '../components/smallPosts/smallPosts';\r\nimport Comments from '../components/comments/comments';\r\n\r\ntype PostId = {\r\n  postId: string;\r\n};\r\n\r\nconst PostPage = () => {\r\n  const [commentValue, setCommentValue] = useState('');\r\n\r\n  const { postId } = useParams<PostId>();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { post, loading, user } = useSelector((state: RootState) => ({\r\n    post: state.blogPosts.find((blogPost) => blogPost.postId === postId),\r\n    loading: state.loading,\r\n    user: state.user,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n    if (!post) {\r\n      history.push('/notfound');\r\n    }\r\n  }, [postId]);\r\n\r\n  const commentHandler = () => {\r\n    if (!commentValue) {\r\n      alert('empty comment');\r\n      return;\r\n    }\r\n    const newComment: Comment = {\r\n      commentId: uuidv4(),\r\n      postId,\r\n      email: 'comment@email.com',\r\n      body: commentValue,\r\n    };\r\n    dispatch(addCommentHandler(newComment));\r\n    setCommentValue('');\r\n  };\r\n  const deletePostHandler = () => {\r\n    if (window.confirm('Are you sure want to delete post?')) {\r\n      dispatch(deletePostAction(postId));\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const deleteCommentHandler = (commentId: string) => {\r\n    window.confirm('Are you sure want to delete post?') &&\r\n      dispatch(deleteCommentAction(commentId, postId));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <H1>loading...</H1>;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Post Page</H1>\r\n            {post && (\r\n              <>\r\n                <Post\r\n                  post={post}\r\n                  user={user}\r\n                  deletePostHandler={deletePostHandler}\r\n                  handleToHomePage={() => history.push('/')}\r\n                  handlePostEdit={() => history.push(`/editpost/${post.postId}`)}\r\n                />\r\n\r\n                <SmallPosts id={postId} post={post} />\r\n                <Comments\r\n                  post={post}\r\n                  user={user}\r\n                  inputCommentValue={commentValue}\r\n                  deleteCommentHandler={deleteCommentHandler}\r\n                  commentHandler={commentHandler}\r\n                  commentValueHandler={(value) => setCommentValue(value)}\r\n                />\r\n              </>\r\n            )}\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","export type UserType = {\r\n  id?: string;\r\n  username?: string;\r\n  email? : string;\r\n  password?: string;\r\n  status?: string;\r\n};\r\n\r\nexport const users: UserType[] = [\r\n  {\r\n    id: '123csxc',\r\n    username: 'mikus',\r\n    email: 'mikus@inbox.lv',\r\n    password: 'redux',\r\n    status: 'admin',\r\n  },\r\n  {\r\n    id: '1234csxc',\r\n    username: 'gatis',\r\n    email: 'gatis@inbox.lv',\r\n    password: 'derux',\r\n    status: 'user',\r\n  },\r\n];\r\n","import React, { FC } from 'react';\r\n\r\ntype Props = {\r\n  data: string[];\r\n  id: string;\r\n};\r\n\r\nconst Datalist: FC<Props> = ({ data, id }) => {\r\n  return (\r\n    <datalist id={id}>\r\n      {data.map((item) => (\r\n        <option key={item}>{item}</option>\r\n      ))}\r\n    </datalist>\r\n  );\r\n};\r\n\r\nexport default Datalist;\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { FC, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Form from '../../commonComponents/form/form';\r\nimport Image from '../../commonComponents/image/image';\r\nimport Input from '../../commonComponents/Input/input';\r\nimport Textarea from '../../commonComponents/textarea/textarea';\r\nimport Label from '../../commonComponents/label/label';\r\nimport { RootState } from '../../store/store';\r\nimport Button from '../../commonComponents/button/button';\r\nimport Datalist from '../../commonComponents/datalist/datalist';\r\n\r\ntype Props = {\r\n  SavePostHandler: (\r\n    e: React.FormEvent<HTMLFormElement>,\r\n    title: string,\r\n    body: string,\r\n    image: string,\r\n    category1: string,\r\n    category2: string\r\n  ) => void;\r\n  handleCancel: () => void;\r\n};\r\n\r\nconst categories: string[] = [];\r\n\r\nconst PostEditor: FC<Props> = ({ SavePostHandler, handleCancel }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [image, setImage] = useState('https://picsum.photos/200/300');\r\n  const [category1, setCategory1] = useState('');\r\n  const [category2, setCategory2] = useState('');\r\n  const posts = useSelector((state: RootState) => state.blogPosts);\r\n\r\n  const { postId } = useParams<{ postId: string }>();\r\n\r\n  useEffect(() => {\r\n    const post = posts.find((onePost) => onePost.postId === postId);\r\n    if (post) {\r\n      setTitle(post?.title);\r\n      setBody(post?.body);\r\n      setImage(post?.image);\r\n      setCategory1(post?.category[0]);\r\n      setCategory2(post?.category[1]);\r\n    }\r\n  }, []);\r\n\r\n  posts.forEach((post) =>\r\n    post.category.forEach((cat) => {\r\n      if (!categories.includes(cat)) {\r\n        categories.push(cat);\r\n      }\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row center-xs\">\r\n        <div className=\"col-xs-10\">\r\n          <Form\r\n            handleSubmit={(e: React.FormEvent<HTMLFormElement>) =>\r\n              SavePostHandler(e, title, body, image, category1, category2)\r\n            }\r\n          >\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-11\">\r\n                <Label htmlFor=\"title\">Title</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={title}\r\n                  required\r\n                  onChangeHandler={(value) => setTitle(value)}\r\n                  focus\r\n                />\r\n              </div>\r\n              <div className=\"col-xs-3\">\r\n                <Image src={image} alt=\"add image\" />\r\n              </div>\r\n              <div className=\"col-xs-8\">\r\n                <Label htmlFor=\"image\">Image</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"image\"\r\n                  placeholder=\"Image link\"\r\n                  value={image}\r\n                  required\r\n                  onChangeHandler={(value) => setImage(value)}\r\n                />\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-6\">\r\n                    <Label htmlFor=\"category1\">First category</Label>\r\n                    <Input\r\n                      value={category1}\r\n                      type=\"text\"\r\n                      list=\"data1\"\r\n                      id=\"category1\"\r\n                      placeholder=\"Category\"\r\n                      required\r\n                      onChangeHandler={(value) => setCategory1(value)}\r\n                    />\r\n                    <Datalist data={categories} id=\"data1\" />\r\n                  </div>\r\n                  <div className=\"col-xs-6\">\r\n                    <Label htmlFor=\"category2\">Second category</Label>\r\n                    <Input\r\n                      value={category2}\r\n                      type=\"text\"\r\n                      list=\"data2\"\r\n                      id=\"category2\"\r\n                      placeholder=\"Category\"\r\n                      required\r\n                      onChangeHandler={(value) => setCategory2(value)}\r\n                    />\r\n                    <Datalist data={categories} id=\"data2\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-11\">\r\n                <Label htmlFor=\"textarea\">Body</Label>\r\n                <Textarea\r\n                  required\r\n                  id=\"textarea\"\r\n                  placeholder=\"My story starts here...\"\r\n                  value={body}\r\n                  onChangeHandler={(value) => setBody(value)}\r\n                >\r\n                  {body}\r\n                </Textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <Button size=\"large\" color=\"success\" type=\"submit\">\r\n              Save{' '}\r\n            </Button>\r\n            <Button size=\"large\" color=\"success\" handleClick={handleCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostEditor;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport PostEditor from '../components/postEditor/postEditor';\r\nimport { H1 } from '../components/typography/typography';\r\nimport { PostType } from '../store/blog/types';\r\nimport { RootState } from '../store/store';\r\nimport { AddPostAction } from '../store/blog/action';\r\n\r\nconst NewPost = () => {\r\n  const loggedUser = useSelector((state: RootState) => state.user.username);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const SavePostHandler = (\r\n    e: React.FormEvent<HTMLFormElement>,\r\n    title: string,\r\n    body: string,\r\n    image: string,\r\n    category1: string,\r\n    category2: string\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    if (loggedUser) {\r\n      const newPost: PostType = {\r\n        postId: uuidv4(),\r\n        title,\r\n        body,\r\n        author: loggedUser,\r\n        image,\r\n        updated: Date.now(),\r\n        category: [category1, category2],\r\n        comments: [],\r\n      };\r\n      dispatch(AddPostAction(newPost));\r\n      history.push('/');\r\n      const localPosts:PostType[] = JSON.parse(localStorage.blogPosts || '{}');\r\n      localPosts.push(newPost);\r\n      localStorage.blogPosts = JSON.stringify(localPosts);\r\n\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This Is New Post Page</H1>\r\n            <PostEditor SavePostHandler={SavePostHandler} handleCancel={handleCancel} />\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport PostEditor from '../components/postEditor/postEditor';\r\nimport { H1 } from '../components/typography/typography';\r\nimport { PostType } from '../store/blog/types';\r\nimport { RootState } from '../store/store';\r\nimport { EditPostAction } from '../store/blog/action';\r\n\r\nconst EditPost = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { postId } = useParams<{ postId: string }>();\r\n\r\n  const { post, loggedUser } = useSelector((state: RootState) => ({\r\n    post: state.blogPosts.find((onePost) => onePost.postId === postId),\r\n    loggedUser: state.user.username,\r\n  }));\r\n\r\n  const SavePostHandler = (\r\n    e: React.FormEvent<HTMLFormElement>,\r\n    title: string,\r\n    body: string,\r\n    image: string,\r\n    category1: string,\r\n    category2: string\r\n  ) => {\r\n    e.preventDefault();\r\n    if (loggedUser && post) {\r\n      const newPost: PostType = {\r\n        postId: post.postId,\r\n        title,\r\n        body,\r\n        author: loggedUser,\r\n        image,\r\n        updated: Date.now(),\r\n        category: [category1, category2],\r\n        comments: post.comments,\r\n      };\r\n      dispatch(EditPostAction(newPost));\r\n      const localPosts:PostType[] = JSON.parse(localStorage.blogPosts || '{}');\r\n      const localPostIndex = localPosts.findIndex(localPost => localPost.postId === post.postId);\r\n      localPosts.splice(localPostIndex, 1, newPost);\r\n      localStorage.blogPosts = JSON.stringify(localPosts);\r\n      history.push(`/blog/${postId}`);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    history.push(`/blog/${postId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This EDIT Post Page</H1>\r\n            <PostEditor SavePostHandler={SavePostHandler} handleCancel={handleCancel} />\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","import React from 'react';\r\nimport Image from '../commonComponents/image/image';\r\nimport MainBody from '../commonComponents/mainBody/mainBody';\r\nimport { H1 } from '../components/typography/typography';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Not Found Page</H1>\r\n            <Image src=\"https://previews.123rf.com/images/abirvalg/abirvalg1301/abirvalg130100004/17628381-404-error-illustration-yellow-quot-wet-floor-quot-style-sign.jpg\" />\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { FC, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Header } from './components/header/header';\nimport Login from './page/login';\nimport Blog from './page/blog';\nimport RegisterPage from './page/register';\nimport PostPage from './page/post';\nimport { users } from './data/users';\nimport { addBlogPosts, getPostsData } from './store/blog/action';\nimport { addUser } from './store/user/action';\nimport NewPost from './page/newPost';\nimport EditPost from './page/editPost';\nimport NotFoundPage from './page/notFound';\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const localUsers = JSON.parse(localStorage.usersBlog || '[]');\n    const currentUser = JSON.parse(localStorage.usersBlogUser || '{}');\n    const localPosts = JSON.parse(localStorage.blogPosts || '{}');\n\n    if (localUsers.length === 0) {\n      localStorage.usersBlog = JSON.stringify(users);\n    }\n    if (localPosts.length === 0) {\n      dispatch(getPostsData());\n    } else {\n      dispatch(addBlogPosts(localPosts));\n    }\n\n    dispatch(addUser(currentUser));\n  }, []);\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/newpost\">\n          <NewPost />\n        </Route>\n        <Route exact path=\"/editpost/:postId\">\n          <EditPost />\n        </Route>\n        <Route exact path=\"/blog/:postId\">\n          <PostPage />\n        </Route>\n        <Route exact path=\"/notfound\">\n          <NotFoundPage />\n        </Route>\n        <Route exact path=\"/\">\n          <Blog />\n        </Route>\n        <Redirect to=\"/notfound\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}