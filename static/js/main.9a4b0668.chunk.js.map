{"version":3,"sources":["commonComponents/form/form.module.scss","commonComponents/Input/input.module.scss","commonComponents/label/label.module.scss","commonComponents/mainBody/mainBody.module.scss","commonComponents/textarea/textarea.module.scss","components/postCard/postCard.module.scss","components/post/post.module.scss","components/header/header.module.scss","components/typography/typography.module.scss","store/blog/types.ts","store/blog/reducer.ts","data/authors.ts","helperFunctions/multiplyText.ts","data/categories.ts","store/loading/types.ts","store/loading/action.ts","store/blog/action.ts","store/user/types.ts","store/user/reducer.ts","store/user/action.ts","store/search/types.ts","store/search/action.ts","store/index.ts","store/search/reducer.ts","store/loading/reducer.ts","reportWebVitals.ts","components/typography/index.tsx","components/header/index.tsx","data/users.ts","commonComponents/button/button.tsx","commonComponents/datalist/datalist.tsx","commonComponents/form/form.tsx","commonComponents/image/image.tsx","commonComponents/Input/input.tsx","commonComponents/label/label.tsx","commonComponents/mainBody/mainBody.tsx","commonComponents/textarea/textarea.tsx","pages/login.tsx","helperFunctions/formatTime.ts","helperFunctions/chooseCategoryColor.ts","helperFunctions/filterPosts.ts","helperFunctions/makeCategoryList.ts","components/postCard/index.tsx","pages/blog.tsx","helperFunctions/sortPostsCategory.ts","pages/register.tsx","components/post/index.tsx","components/smallPosts/index.tsx","components/comments/index.tsx","pages/post.tsx","components/postEditor/index.tsx","pages/newPost.tsx","pages/editPost.tsx","pages/notFound.tsx","App.tsx","index.tsx","commonComponents/image/image.module.scss","components/smallPosts/smallPosts.module.scss","components/comments/comments.module.scss","commonComponents/button/button.module.scss"],"names":["module","exports","ADD_POSTS","ADD_COMMENTS","ADD_NEW_COMMENT","DELETE_POST","DELETE_COMMENT","ADD_POST","EDIT_POST","initialState","Authors","multiplyText","text","multiplyTimes","newText","i","categories","LOADING","changeLoading","isLoading","type","addBlogPosts","posts","deletePostAction","postId","SAVE_USER_INFO","LOGOUT_USER","addUser","user","INPUT_POST_SEARCH","addInputSearchValue","value","rootReducer","combineReducers","state","action","blogPosts","length","copyState","index","findIndex","post","comments","cloneDeep","comment","push","splice","commentIndex","commentId","seachPost","loading","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","H1","children","propsClass","className","style","heading1","H2","heading2","H3","heading3","H5","heading5","P1","Paragraph1","P2","Paragraph2","Header","dispatch","useDispatch","useSelector","header","icon","faDog","size","blog","navLink","exact","activeClassName","active","to","username","capitalize","status","faUser","faUserCog","faUserSecret","LinkWraper","onClick","localStorage","usersBlogUser","JSON","stringify","users","id","email","password","Button","handleClick","color","button","padding","backgroundColor","fontSize","Datalist","data","map","item","Form","handleSubmit","onSubmit","form","Image","src","alt","imageWrapper","image","Input","onChangeHandler","placeholder","required","list","focus","focusRef","useRef","useEffect","current","input","onChange","e","target","ref","Label","htmlFor","label","MainBody","mainBody","Textarea","rows","textarea","LoginPage","useState","nameValue","setNameValue","passwordValue","setPasswordValue","history","useHistory","name","pw","preventDefault","localUsers","parse","usersBlog","loggedUser","find","alert","handleLogin","faUserCircle","spin","formatTime","time","moment","unix","format","chooseCategoryColor","category","chosenCategory","filterPosts","searchValue","filter","title","toLowerCase","includes","makeCategoryList","forEach","PostCard","deletePostHandler","handleReadMore","body","author","updated","postCard","dangerouslySetInnerHTML","splitted","split","outPutString","__html","slice","highlightsText","substring","cat","Blog","setChosenCategory","sort","postNext","some","eachCategory","sortPostsCategory","window","confirm","RegisterPage","setEmail","setUsername","setPassword","password2","setPassword2","newUser","uuidv4","faRegistered","Post","handlePostEdit","handleToHomePage","SmallPosts","threePosts","setThreePosts","sameCategoryPosts","eachPost","sampleSize","smallPosts","smallPostCard","Comments","deleteCommentHandler","inputCommentValue","commentHandler","commentValueHandler","commentCard","PostPage","commentValue","setCommentValue","useParams","blogPost","scrollTo","top","left","behavior","deleteCommentAction","newComment","PostEditor","SavePostHandler","handleCancel","setTitle","setBody","setImage","category1","setCategory1","category2","setCategory2","onePost","NewPost","newPost","Date","now","localPosts","EditPost","EditPostAction","localPostIndex","localPost","NotFoundPage","App","currentUser","axios","get","random","res","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a4b0668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__3KtoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2u2bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"label_label__3f6H-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBody\":\"mainBody_mainBody__1rC7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"textarea_textarea__2GCbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"postCard_postCard__1nzbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__8TseF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1E5L_\",\"blog\":\"header_blog__1Oq_v\",\"LinkWraper\":\"header_LinkWraper__17HV9\",\"navLink\":\"header_navLink__2Fe5R\",\"user\":\"header_user__1dTLR\",\"paragraph\":\"header_paragraph__3G_h3\",\"active\":\"header_active__2ewzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading1\":\"typography_heading1__3xoqY\",\"heading2\":\"typography_heading2__1w5tJ\",\"heading3\":\"typography_heading3__2TR-O\",\"heading5\":\"typography_heading5__ftbTJ\",\"Paragraph1\":\"typography_Paragraph1__1glaI\",\"Paragraph2\":\"typography_Paragraph2__3hs35\"};","export const ADD_POSTS = 'ADD_POSTS';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const ADD_NEW_COMMENT = 'ADD_NEW_COMMENT';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const EDIT_POST = 'EDIT_POST';\r\n\r\nexport type Comment = {\r\n  commentId: string;\r\n  postId: string;\r\n  email: string;\r\n  body: string;\r\n};\r\n\r\n\r\nexport type PostType = {\r\n  postId: string;\r\n  title: string;\r\n  body: string;\r\n  author: string;\r\n  image: string;\r\n  updated: number;\r\n  category: string[];\r\n  comments: Comment[];\r\n};\r\n\r\nexport type BlogPostAction = {\r\n  type: typeof ADD_POSTS;\r\n  posts: PostType[];\r\n};\r\n\r\nexport type BlogCommentsAction = {\r\n  type: typeof ADD_COMMENTS;\r\n  comments: Comment[];\r\n};\r\n\r\nexport type NewCommentAction = {\r\n  type: typeof ADD_NEW_COMMENT;\r\n  comment: Comment;\r\n};\r\nexport type DeletePostAction = {\r\n  type: typeof DELETE_POST;\r\n  postId: string;\r\n};\r\n\r\nexport type DeleteCommentAction = {\r\n  type: typeof DELETE_COMMENT;\r\n  commentId: string;\r\n  postId: string;\r\n};\r\n\r\nexport type AddPostAction = {\r\n  type: typeof ADD_POST;\r\n  post: PostType;\r\n};\r\n\r\nexport type EditPostAction = {\r\n  type: typeof EDIT_POST;\r\n  post: PostType;\r\n};\r\n\r\nexport type AllActions =\r\n  | BlogPostAction\r\n  | BlogCommentsAction\r\n  | NewCommentAction\r\n  | DeletePostAction\r\n  | DeleteCommentAction\r\n  | EditPostAction\r\n  | AddPostAction;\r\n","import cloneDeep from 'lodash/cloneDeep';\r\nimport {\r\n  AllActions,\r\n  PostType,\r\n  ADD_POSTS,\r\n  ADD_COMMENTS,\r\n  ADD_NEW_COMMENT,\r\n  DELETE_COMMENT,\r\n  DELETE_POST,\r\n  EDIT_POST,\r\n  ADD_POST,\r\n} from './types';\r\n\r\nconst initialState: PostType[] = [];\r\n\r\nexport const blogPostsReducer = (state = initialState, action: AllActions) => {\r\n  switch (action.type) {\r\n    case ADD_POSTS: {\r\n      if (state.length === 0) {\r\n        return action.posts;\r\n      }\r\n      return state;\r\n    }\r\n    case ADD_COMMENTS: {\r\n      const copyState = [...state];\r\n      const index = copyState.findIndex((post) => post.postId === action.comments[0].postId);\r\n      copyState[index].comments = action.comments;\r\n      return copyState;\r\n    }\r\n    case ADD_NEW_COMMENT: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.comment.postId);\r\n      copyState[index].comments.push(action.comment);\r\n      return copyState;\r\n    }\r\n\r\n    case DELETE_POST: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.postId);\r\n      copyState.splice(index, 1);\r\n      return copyState;\r\n    }\r\n\r\n    case DELETE_COMMENT: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.postId);\r\n      const commentIndex = copyState[index].comments.findIndex(\r\n        (comment) => comment.commentId === action.commentId\r\n      );\r\n      copyState[index].comments.splice(commentIndex, 1);\r\n      return copyState;\r\n    }\r\n\r\n    case EDIT_POST: {\r\n      const copyState = cloneDeep(state);\r\n      const index = copyState.findIndex((post) => post.postId === action.post.postId);\r\n      copyState.splice(index, 1, action.post);\r\n      return copyState;\r\n    }\r\n\r\n    case ADD_POST: {\r\n      const copyState = cloneDeep(state);\r\n      copyState.push(action.post);\r\n      return copyState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const Authors = ['Mikus', 'Gatis', 'Jānis', 'Mārtiņš', 'Vitālijs', 'Estere', 'Aina', 'Ieva'];\r\n","export const multiplyText = (text: string, multiplyTimes: number) => {\r\n  let newText = text;\r\n  for (let i = 0; i < multiplyTimes; i++) {\r\n    newText += text;\r\n    newText += ' ';\r\n  }\r\n  return newText;\r\n};\r\n","export const categories = ['life', 'cars', 'nature', 'health', 'sport', 'music', 'house', 'summer'];\r\n","export const LOADING = 'LOADING';\r\n\r\nexport type ChangeLoadingAction = {\r\n  type: typeof LOADING;\r\n  isLoading:boolean\r\n};\r\n\r\n\r\n","import { LOADING } from './types';\r\n\r\nexport const changeLoading = (isLoading:boolean) => {\r\n  return {\r\n    type: LOADING,\r\n    isLoading\r\n  };\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport random from 'lodash/random';\r\nimport sampleSize from 'lodash/sampleSize';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_POSTS,\r\n  ADD_COMMENTS,\r\n  ADD_NEW_COMMENT,\r\n  DELETE_COMMENT,\r\n  DELETE_POST,\r\n  EDIT_POST,\r\n  ADD_POST,\r\n  PostType,\r\n  Comment,\r\n} from './types';\r\nimport { Authors } from '../../data/authors';\r\nimport { multiplyText } from '../../helperFunctions/multiplyText';\r\nimport { categories } from '../../data/categories';\r\nimport { changeLoading } from '../loading/action';\r\n\r\nexport const addBlogPosts = (posts: PostType[]) => {\r\n  return {\r\n    type: ADD_POSTS,\r\n    posts,\r\n  };\r\n};\r\n\r\nexport const addComments = (comments: Comment[]) => {\r\n  return {\r\n    type: ADD_COMMENTS,\r\n    comments,\r\n  };\r\n};\r\n\r\nexport const addCommentHandler = (comment: Comment) => {\r\n  return {\r\n    type: ADD_NEW_COMMENT,\r\n    comment,\r\n  };\r\n};\r\n\r\nexport const deletePostAction = (postId: string) => {\r\n  return {\r\n    type: DELETE_POST,\r\n    postId,\r\n  };\r\n};\r\n\r\nexport const deleteCommentAction = (commentId: string, postId: string) => {\r\n  return {\r\n    type: DELETE_COMMENT,\r\n    commentId,\r\n    postId,\r\n  };\r\n};\r\n\r\nexport const AddPostAction = (post: PostType) => {\r\n  return {\r\n    type: ADD_POST,\r\n    post\r\n  };\r\n};\r\nexport const EditPostAction = (post: PostType) => {\r\n  return {\r\n    type: EDIT_POST,\r\n    post\r\n  };\r\n};\r\n\r\nexport const getPostsData = () => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch(changeLoading(true));\r\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(({ data }) => {\r\n      const posts: PostType[] = data.map((post: { id: number; title: string; body: string }) => ({\r\n        postId: `${post.id}`,\r\n        title: post.title,\r\n        body: multiplyText(post.body, 6),\r\n        author: Authors[random(Authors.length-1)],\r\n        image: `https://picsum.photos/id/${post.id + 5}/500/500`,\r\n        updated: Date.now() - random(10000),\r\n        category: sampleSize(categories, 2),\r\n        comments: [],\r\n      }));\r\n      axios.get('https://jsonplaceholder.typicode.com/comments').then((res) => {\r\n        const comments: Comment[] = res.data.map(\r\n          (comment: { id: number; postId: number; email: string; body: string }) => ({\r\n            commentId: `${comment.id}`,\r\n            postId: `${comment.postId}`,\r\n            email: comment.email,\r\n            body: comment.body,\r\n          })\r\n        );\r\n\r\n        posts.forEach((post: PostType) => {\r\n          comments.forEach((comment: Comment) => {\r\n            if (post.postId === comment.postId) {\r\n              post.comments.push(comment);\r\n            }\r\n          });\r\n        });\r\n        dispatch(addBlogPosts(posts));\r\n        dispatch(changeLoading(false));\r\n        const localPosts = JSON.parse(localStorage.blogPosts || '[]');\r\n        if (localPosts.length === 0) {\r\n          localStorage.blogPosts = JSON.stringify(posts);\r\n        }\r\n      });\r\n    });\r\n  };\r\n};\r\n","\r\nexport const SAVE_USER_INFO = 'SAVE_USER_INFO';\r\nexport const LOGOUT_USER = 'LOG_OUT_USER';\r\n\r\nexport type UserType = {\r\n  id?: string;\r\n  username?: string;\r\n  email? : string;\r\n  password?: string;\r\n  status?: string;\r\n};\r\n\r\nexport type SaveUser = {\r\n  type: typeof SAVE_USER_INFO;\r\n  user: UserType;\r\n};\r\n\r\nexport type LogoutUser = {\r\n  type: typeof LOGOUT_USER;\r\n  user: UserType;\r\n};\r\n\r\n\r\nexport type AllUserActions = SaveUser | LogoutUser;\r\n","import { AllUserActions, SAVE_USER_INFO, LOGOUT_USER, UserType } from './types';\r\n\r\nconst initialState: UserType = {};\r\n\r\nexport const loginReducer = (state = initialState, action: AllUserActions) => {\r\n  switch (action.type) {\r\n    case SAVE_USER_INFO: {\r\n      return action.user;\r\n    }\r\n    case LOGOUT_USER: {\r\n      return {};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SAVE_USER_INFO, LOGOUT_USER, UserType } from './types';\r\n\r\nexport const addUser = (user: UserType) => {\r\n  return {\r\n    type: SAVE_USER_INFO,\r\n    user,\r\n  };\r\n};\r\n\r\nexport const LogOutUser = () => {\r\n  return {\r\n    type: LOGOUT_USER,\r\n  };\r\n};\r\n","export const INPUT_POST_SEARCH = 'INPUT_POST_SEARCH';\r\n\r\n\r\nexport type InputSearchPost = {\r\n  type: typeof INPUT_POST_SEARCH;\r\n  value: string;\r\n};\r\n\r\n\r\n","import { INPUT_POST_SEARCH } from './types';\r\n\r\nexport const addInputSearchValue = (value: string) => {\r\n  return {\r\n    type: INPUT_POST_SEARCH,\r\n    value,\r\n  };\r\n};\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { blogPostsReducer } from './blog';\r\nimport { loginReducer } from './user';\r\nimport { seachPostReducer } from './search';\r\nimport { loadingReducer } from './loading';\r\n\r\nconst rootReducer = combineReducers({\r\n  user: loginReducer,\r\n  blogPosts: blogPostsReducer,\r\n  seachPost: seachPostReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { InputSearchPost, INPUT_POST_SEARCH } from './types';\r\n\r\n\r\n\r\n\r\nexport const seachPostReducer = (state = '', action: InputSearchPost) => {\r\n  switch (action.type) {\r\n    case INPUT_POST_SEARCH: {\r\n      return action.value;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ChangeLoadingAction, LOADING } from './types';\r\n\r\nexport const loadingReducer = (state = false, action: ChangeLoadingAction) => {\r\n  switch (action.type) {\r\n    case LOADING: {\r\n      return action.isLoading;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/no-danger */\r\nimport React, { FC } from 'react';\r\nimport style from './typography.module.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  propsClass?: string;\r\n};\r\n\r\nexport const H1: FC<Props> = ({ children, propsClass, }) => {\r\n  return <h1 className={`${style.heading1} ${propsClass}`}>{children}</h1>;\r\n};\r\n\r\nexport const H2: FC<Props> = ({ children, propsClass }) => {\r\n  return <h2 className={`${style.heading2} ${propsClass}`}>{children}</h2>;\r\n};\r\n\r\nexport const H3: FC<Props> = ({ children, propsClass }) => {\r\n  return <h3 className={`${style.heading3} ${propsClass}`}>{children}</h3>;\r\n};\r\nexport const H4: FC<Props> = ({ children, propsClass }) => {\r\n  return <h4 className={`${style.heading4} ${propsClass}`}>{children}</h4>;\r\n};\r\nexport const H5: FC<Props> = ({ children, propsClass }) => {\r\n  return <h5 className={`${style.heading5} ${propsClass}`}>{children}</h5>;\r\n};\r\nexport const P1: FC<Props> = ({ children, propsClass }) => {\r\n  return <p className={`${style.Paragraph1} ${propsClass}`}>{children}</p>;\r\n};\r\nexport const P2: FC<Props> = ({ children, propsClass }) => {\r\n  return <p className={`${style.Paragraph2} ${propsClass}`}>{children}</p>;\r\n};\r\n","import React, { FC } from 'react';\nimport capitalize from 'lodash/capitalize';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faUserSecret, faDog, faUserCog } from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport { LogOutUser,  UserType } from '../../store/user';\nimport type { RootState } from '../../store';\nimport { H5, P2 } from '../typography';\nimport style from './header.module.scss';\n\nexport const Header: FC = () => {\n  const dispatch = useDispatch();\n\n  const user = useSelector((state: RootState): UserType => state.user);\n\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-10 col-xs-offset-1\">\n            <div className={style.header}>\n              <div className=\"row center-xs\">\n                <div className=\"col-md-2 col-xs-4\">\n                  <FontAwesomeIcon icon={faDog} size=\"6x\" />\n                </div>\n                <div className=\"col-md-3 col-xs-4\">\n                  <div className={style.blog}>\n                    <NavLink className={style.navLink} exact activeClassName={style.active} to=\"/\">\n                      blog\n                    </NavLink>\n                  </div>\n                </div>\n                <div className=\"col-md-5 col-xs-12 last-xs\">\n                  <div className={style.user}>\n                    {user.username ? (\n                      <H5>\n                        Hello, {capitalize(user.username)}!{' '}\n                        {user.status === 'user' ? (\n                          <FontAwesomeIcon icon={faUser} />\n                        ) : (\n                          <FontAwesomeIcon icon={faUserCog} />\n                        )}{' '}\n                      </H5>\n                    ) : (\n                      <>\n                        <H5>\n                          Hello, Guest! <FontAwesomeIcon icon={faUserSecret} />\n                        </H5>\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-2 col-xs-4 last-md\">\n                  <div className={style.LinkWraper}>\n                    {!user.username ? (\n                      <>\n                        <NavLink\n                          className={style.navLink}\n                          exact\n                          activeClassName={style.active}\n                          to=\"/login\"\n                        >\n                          login\n                        </NavLink>\n                        <NavLink\n                          className={style.navLink}\n                          exact\n                          activeClassName={style.active}\n                          to=\"/register\"\n                        >\n                          register\n                        </NavLink>\n                      </>\n                    ) : (\n                      <>\n                        <NavLink\n                          className={style.navLink}\n                          exact\n                          activeClassName={style.active}\n                          to=\"/login\"\n                          onClick={() => {\n                            dispatch(LogOutUser());\n                            localStorage.usersBlogUser = JSON.stringify({});\n                          }}\n                        >\n                          logout\n                        </NavLink>\n                        <P2 propsClass=\"padding--0\">\n                          {user.status}{' '}\n                          {user.status === 'user' ? (\n                            <FontAwesomeIcon icon={faUser} />\n                          ) : (\n                            <FontAwesomeIcon icon={faUserCog} />\n                          )}\n                        </P2>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","type UserType = {\r\n  id?: string;\r\n  username?: string;\r\n  email? : string;\r\n  password?: string;\r\n  status?: string;\r\n};\r\n\r\nexport const users: UserType[] = [\r\n  {\r\n    id: '123csxc',\r\n    username: 'mikus',\r\n    email: 'mikus@inbox.lv',\r\n    password: 'redux',\r\n    status: 'admin',\r\n  },\r\n  {\r\n    id: '1234csxc',\r\n    username: 'gatis',\r\n    email: 'gatis@inbox.lv',\r\n    password: 'derux',\r\n    status: 'user',\r\n  },\r\n];\r\n","import React, { FC } from 'react';\r\nimport style from './button.module.scss';\r\n\r\ntype ButtonType = 'button' | 'submit' | 'reset';\r\ntype ButtonSize = 'small' | 'medium' | 'large';\r\ntype ButtonColor = 'primary' | 'success' | 'warning';\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  type?: ButtonType;\r\n  size?: ButtonSize;\r\n  color?: ButtonColor;\r\n  handleClick?: () => void;\r\n  propsClass?: string;\r\n};\r\n\r\nconst Button: FC<Props> = ({\r\n  children = 'button',\r\n  type = 'button',\r\n  handleClick,\r\n  propsClass,\r\n  size = 'medium',\r\n  color = 'primary',\r\n}) => {\r\n  const buttonSize = () => {\r\n    if (size === 'small') return '4px 8px';\r\n    if (size === 'large') return '12px 32px';\r\n    return '6px 16px';\r\n  };\r\n  const buttonColor = () => {\r\n    if (color === 'success') return '#fca311';\r\n    if (color === 'warning') return '#cc6b6b';\r\n    return '#e5e5e5';\r\n  };\r\n\r\n  const fontSize = () => {\r\n    if (size === 'small') return '16px';\r\n    if (size === 'large') return '32px';\r\n    return '24px';\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`${style.button} ${propsClass}`}\r\n      // eslint-disable-next-line react/button-has-type\r\n      type={type}\r\n      style={{ padding: buttonSize(), backgroundColor: buttonColor(), fontSize: fontSize() }}\r\n      onClick={handleClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { FC } from 'react';\r\n\r\ntype Props = {\r\n  data: string[];\r\n  id: string;\r\n};\r\n\r\nconst Datalist: FC<Props> = ({ data, id }) => {\r\n  return (\r\n    <datalist id={id}>\r\n      {data.map((item) => (\r\n        <option key={item}>{item}</option>\r\n      ))}\r\n    </datalist>\r\n  );\r\n};\r\n\r\nexport default Datalist;\r\n","import React, { FC } from 'react';\r\nimport style from './form.module.scss';\r\n\r\ntype Props = {\r\n  handleSubmit?: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  propsClass?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Form: FC<Props> = ({ handleSubmit, children, propsClass }) => {\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit} className={`${style.form} ${propsClass}`}>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { FC } from 'react';\r\nimport style from './image.module.scss';\r\n\r\ntype Props = {\r\n  src?: string;\r\n  alt? :string\r\n  propsClass?: string;\r\n};\r\n\r\nconst Image: FC<Props> = ({ src, alt, propsClass }) => {\r\n  return (\r\n    <div className={`${style.imageWrapper} ${propsClass}`}>\r\n      <img src={src} alt={alt} className={style.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React, { FC, useRef, useEffect } from 'react';\r\nimport style from './input.module.scss';\r\n\r\ntype Props = {\r\n  value: string;\r\n  onChangeHandler: (value: string) => void;\r\n  type?: 'text' | 'email' | 'password' | 'search';\r\n  placeholder?: string;\r\n  propsClass?: string;\r\n  id?: string;\r\n  required?: boolean;\r\n  list?: string;\r\n  focus?: boolean;\r\n};\r\n\r\nconst Input: FC<Props> = ({\r\n  value,\r\n  onChangeHandler,\r\n  placeholder = 'placeholder here...',\r\n  id,\r\n  required = false,\r\n  propsClass,\r\n  list,\r\n  type = 'text',\r\n  focus = false,\r\n}) => {\r\n\r\n  const focusRef = useRef<HTMLInputElement>(null);\r\n  \r\n  useEffect(() => {\r\n    focus && focusRef.current?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <input\r\n      className={`${style.input} ${propsClass}`}\r\n      list={list}\r\n      type={type}\r\n      onChange={(e) => onChangeHandler(e.target.value)}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      id={id}\r\n      required={required}\r\n      ref={focusRef}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { FC } from 'react';\r\nimport style from './label.module.scss';\r\n\r\ntype Props = {\r\n  children?: React.ReactNode;\r\n  propsClass?: string;\r\n  htmlFor?: string;\r\n};\r\n\r\nconst Label: FC<Props> = ({ children, htmlFor, propsClass }) => {\r\n  return (\r\n    <label htmlFor={htmlFor} className={`${style.label} ${propsClass}`}>\r\n      {children}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React, { FC } from 'react';\r\nimport style from './mainBody.module.scss';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  propsClass?: string;\r\n};\r\n\r\nconst MainBody: FC<Props> = ({ propsClass, children }) => {\r\n  return <div className={`${style.mainBody} ${propsClass}`}>{children}</div>;\r\n};\r\n\r\nexport default MainBody;\r\n","import React, { FC } from 'react';\r\nimport style from './textarea.module.scss';\r\n\r\ntype Props = {\r\n  value: string;\r\n  placeholder?: string;\r\n  children?: React.ReactNode;\r\n  rows?: number;\r\n  propsClass?: string;\r\n  id?: string;\r\n  required?: boolean;\r\n  onChangeHandler: (value: string) => void;\r\n};\r\n\r\nconst Textarea: FC<Props> = ({\r\n  children,\r\n  propsClass,\r\n  id,\r\n  required,\r\n  rows=10,\r\n  value,\r\n  placeholder = 'Enter text here',\r\n  onChangeHandler,\r\n}) => {\r\n  return (\r\n    <textarea\r\n      className={`${style.textarea} ${propsClass}`}\r\n      placeholder={placeholder}\r\n      rows={rows}\r\n      value={value}\r\n      id={id}\r\n      required={required}\r\n      onChange={(e) => onChangeHandler(e.target.value)}\r\n    >\r\n      {children}\r\n    </textarea>\r\n  );\r\n};\r\n\r\nexport default Textarea;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { addUser, UserType } from '../store/user';\r\nimport { H1 } from '../components/typography';\r\nimport { Button, Form, Input, Label, MainBody } from '../commonComponents';\r\n\r\nconst LoginPage = () => {\r\n  const [nameValue, setNameValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogin = (e: React.FormEvent<HTMLFormElement>, name: string, pw: string) => {\r\n    e.preventDefault();\r\n\r\n    const localUsers: UserType[] = JSON.parse(localStorage.usersBlog || '[]');\r\n    if (localUsers.length === 0) {\r\n      alert('wrong username or password');\r\n      return;\r\n    }\r\n    const loggedUser = localUsers.find((user) => user.username === name && user.password === pw);\r\n    if (loggedUser) {\r\n\r\n      localStorage.usersBlogUser = JSON.stringify(loggedUser);\r\n      dispatch(addUser(loggedUser));\r\n      setNameValue('');\r\n      setPasswordValue('');\r\n      history.push('./');\r\n\r\n    } else {\r\n      alert('wrong username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is LOGIN Page</H1>\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-8\">\r\n                <Form handleSubmit={(e) => handleLogin(e, nameValue, passwordValue)}>\r\n                  <FontAwesomeIcon icon={faUserCircle} size=\"3x\" spin />\r\n                  <div className=\"row center-xs\">\r\n                    <div className=\"col-sm-8 col-xs-12\">\r\n                      <Label htmlFor=\"username\">Username</Label>\r\n                      <Input\r\n                        placeholder=\"Enter username\"\r\n                        value={nameValue}\r\n                        onChangeHandler={(value) => setNameValue(value)}\r\n                        id=\"username\"\r\n                        required\r\n                        focus\r\n                      />\r\n\r\n                      <Label htmlFor=\"password\">password</Label>\r\n                      <Input\r\n                        placeholder=\"Enter Password\"\r\n                        value={passwordValue}\r\n                        onChangeHandler={(value) => setPasswordValue(value)}\r\n                        id=\"password\"\r\n                        required\r\n                        type=\"password\"\r\n                        propsClass=\"margin-bottom--32\"\r\n                      />\r\n\r\n                      <Button type=\"submit\" size=\"large\" color=\"success\">\r\n                        Login\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import moment from 'moment';\r\n\r\nexport const formatTime = (time: number) => {\r\n  const convertedTime = moment.unix(time / 1000).format('MMMM Do, h:mm:ss a');\r\n  return convertedTime;\r\n};\r\n","export const chooseCategoryColor = (\r\n  category: string,\r\n  chosenCategory: string\r\n): 'success' | 'primary' => {\r\n  if (category === chosenCategory) {\r\n    return 'success';\r\n  }\r\n  return 'primary';\r\n};\r\n","import { PostType } from '../store/blog/types';\r\n\r\nexport const filterPosts = (posts: PostType[], searchValue:string) => {\r\n  const filteredPosts = posts.filter((post) =>\r\n    post.title.toLowerCase().includes(searchValue.toLowerCase())\r\n  );\r\n  return filteredPosts;\r\n};\r\n","import { PostType } from '../store/blog/types';\r\n\r\nexport const categories = ['all'];\r\n\r\nexport const makeCategoryList = (posts:PostType[]) => {\r\n  posts.forEach((post) =>\r\n    post.category.forEach((category) => {\r\n      if (!categories.includes(category)) {\r\n        categories.push(category);\r\n      }\r\n    })\r\n  );\r\n  return categories;\r\n};\r\n","/* eslint-disable max-len */\r\nimport React, { FC } from 'react';\r\nimport { PostType } from '../../store/blog/types';\r\nimport { UserType } from '../../store/user';\r\nimport {Button, Image} from '../../commonComponents';\r\nimport { H3, P1, P2 } from '../typography';\r\nimport { formatTime } from '../../helperFunctions';\r\nimport style from './postCard.module.scss';\r\n\r\n\r\ntype Props = {\r\n  user: UserType;\r\n  post: PostType;\r\n  chosenCategory: string;\r\n  searchValue: string;\r\n  deletePostHandler: () => void;\r\n  handleReadMore: () => void;\r\n};\r\nconst PostCard: FC<Props> = ({\r\n  post,\r\n  chosenCategory,\r\n  user,\r\n  searchValue,\r\n  deletePostHandler,\r\n  handleReadMore,\r\n}) => {\r\n  const { title, body, image, category, author, updated, comments } = post;\r\n\r\n  const highlightsText = () => {\r\n    const splitted = title.split(searchValue);\r\n    let outPutString = '';\r\n\r\n    splitted.forEach((item) => {\r\n      outPutString += `<span>${item}</span><span class='apricot'>${searchValue}</span>`;\r\n    });\r\n    const realOutput = outPutString.slice(0, outPutString.length - 30 - searchValue.length);\r\n    return { __html: realOutput };\r\n  };\r\n\r\n  return (\r\n    <div className={style.postCard}>\r\n      <div className=\"row end-xs\">\r\n        <div className=\"col-xs-12\">\r\n          {user.status === 'admin' && (\r\n            <Button handleClick={deletePostHandler} color=\"warning\" size=\"small\">\r\n              Delete Post\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {!searchValue ? (\r\n            <H3>{title}</H3>\r\n          ) : (\r\n            <h3 className=\"heading3\" dangerouslySetInnerHTML={highlightsText()} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-3\">\r\n          <Image src={image} alt={title} />\r\n        </div>\r\n        <div className=\"col-xs-9\">\r\n          <P1 propsClass=\"margin-bottom--16\">\r\n            {body.substring(0, 200)}\r\n            {'... '}\r\n            <Button type=\"button\" handleClick={handleReadMore} propsClass=\"ReadMore\">\r\n              Read more...\r\n            </Button>\r\n          </P1>\r\n\r\n          <P2>\r\n            category:{' '}\r\n            {category.map((cat) => (\r\n              <em key={cat} className={`${chosenCategory === cat && 'apricot'}`}>\r\n                #{cat}{' '}\r\n              </em>\r\n            ))}\r\n          </P2>\r\n          <P2>\r\n            Author : <em>{author}</em>\r\n            {',  '}\r\n            Updated :{' '}\r\n            <em>\r\n              {formatTime(updated)}\r\n              {',  '}\r\n            </em>\r\n            Comments :{' '}\r\n            <em>\r\n              {comments.length}\r\n              {'  '}\r\n            </em>\r\n          </P2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { addInputSearchValue } from '../store/search';\r\nimport { deletePostAction } from '../store/blog';\r\nimport PostCard from '../components/postCard';\r\nimport { H1, H3 } from '../components/typography';\r\nimport { Button, Image, Input, MainBody } from '../commonComponents';\r\nimport { chooseCategoryColor, filterPosts, makeCategoryList, sortPostsCategory } from '../helperFunctions';\r\n\r\nconst Blog = () => {\r\n  const [chosenCategory, setChosenCategory] = useState('all');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { posts, searchValue, loading, user } = useSelector((state: RootState) => ({\r\n    posts: state.blogPosts,\r\n    searchValue: state.seachPost,\r\n    loading: state.loading,\r\n    user: state.user,\r\n  }));\r\n\r\n  const handleReadMore = (id: string) => {\r\n    history.push(`/blog/${id}`);\r\n  };\r\n\r\n  const deletePostHandler = (id: string) => {\r\n    window.confirm('Are you sure want to delete post?') && dispatch(deletePostAction(id));\r\n  };\r\n\r\n  const handlePostSearch = (value: string) => {\r\n    if (value.length > 1) {\r\n      setChosenCategory('all');\r\n    }\r\n    dispatch(addInputSearchValue(value));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-10 col-xs-offset-1\">\r\n            <MainBody>\r\n              <H1>loading...</H1>\r\n            </MainBody>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Blog Page</H1>\r\n            <div className=\"row end-xs\">\r\n              <div className=\"col-xs-12 margin-right--16\">\r\n                {user.username && (\r\n                  <Button\r\n                    type=\"button\"\r\n                    handleClick={() => history.push('/newpost')}\r\n                    size=\"large\"\r\n                    color=\"success\"\r\n                  >\r\n                    New Post\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4 col-xs-8 margin-left--16\">\r\n                <Input\r\n                  type=\"search\"\r\n                  placeholder=\"Find post by title here...\"\r\n                  value={searchValue}\r\n                  onChangeHandler={handlePostSearch}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-12 margin-left--16\">\r\n                {makeCategoryList(posts).map((category) => (\r\n                  <Button\r\n                    type=\"button\"\r\n                    key={category}\r\n                    color={chooseCategoryColor(category, chosenCategory)}\r\n                    handleClick={() => {\r\n                      setChosenCategory(category);\r\n                      dispatch(addInputSearchValue(''));\r\n                    }}\r\n                  >\r\n                    <em>#{category}</em>\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <>\r\n              {!filterPosts(posts, searchValue).length ? (\r\n                <>\r\n                  <H3>Can not find any posts...</H3>\r\n                  <Image\r\n                    src=\"https://aubankaitis.files.wordpress.com/2014/04/search_600.jpg\"\r\n                    alt=\"..\"\r\n                  />\r\n                </>\r\n              ) : (\r\n                filterPosts(posts, searchValue)\r\n                  .sort((post, postNext) => postNext.updated - post.updated)\r\n                  .map(\r\n                    (post) =>\r\n                      sortPostsCategory(post.category, chosenCategory) && (\r\n                        <PostCard\r\n                          user={user}\r\n                          chosenCategory={chosenCategory}\r\n                          key={post.postId}\r\n                          searchValue={searchValue}\r\n                          post={post}\r\n                          deletePostHandler={() => deletePostHandler(post.postId)}\r\n                          handleReadMore={() => handleReadMore(post.postId)}\r\n                        />\r\n                      )\r\n                  )\r\n              )}\r\n            </>\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","export const sortPostsCategory = (category: string[], chosenCategory: string) => {\r\n  if (chosenCategory === 'all') {\r\n    return true;\r\n  }\r\n  return category.some((eachCategory) => eachCategory === chosenCategory);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRegistered } from '@fortawesome/free-solid-svg-icons';\r\nimport { UserType, addUser } from '../store/user';\r\nimport { Button,  Form,  Input, Label,  MainBody } from '../commonComponents';\r\nimport { H1 } from '../components/typography';\r\n\r\nconst RegisterPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password2, setPassword2] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleRegister = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const localUsers: UserType[] = JSON.parse(localStorage.usersBlog || '[]');\r\n    if (localUsers.some((user) => user.username === username)) {\r\n      alert('username already exists, try other!');\r\n      return;\r\n    }\r\n    if (password !== password2) {\r\n      alert('passwords do not match');\r\n      return;\r\n    }\r\n    const newUser: UserType = {\r\n      id: uuidv4(),\r\n      username,\r\n      email,\r\n      password,\r\n    };\r\n    localUsers.push(newUser);\r\n    localStorage.usersBlog = JSON.stringify(localUsers);\r\n    dispatch(addUser(newUser));\r\n    history.push('./');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Register Page</H1>\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-8\">\r\n                <Form handleSubmit={handleRegister}>\r\n                  <FontAwesomeIcon icon={faRegistered} size=\"3x\" spin />\r\n                  <div className=\"row center-xs\">\r\n                    <div className=\"col-sm-8 col-xs-12\">\r\n                      <Label htmlFor=\"email\">Email</Label>\r\n                      <Input\r\n                        placeholder=\"Enter email\"\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChangeHandler={(value) => setEmail(value)}\r\n                        id=\"email\"\r\n                        required\r\n                        focus\r\n                      />\r\n                      <Label htmlFor=\"username\">Username</Label>\r\n                      <Input\r\n                        placeholder=\"Enter username\"\r\n                        value={username}\r\n                        onChangeHandler={(value) => setUsername(value)}\r\n                        id=\"username\"\r\n                        required\r\n                      />\r\n                      <Label htmlFor=\"password\">Password</Label>\r\n                      <Input\r\n                        placeholder=\"Enter password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChangeHandler={(value) => setPassword(value)}\r\n                        id=\"password\"\r\n                        required\r\n                      />\r\n                      <Label propsClass=\"commentLabel\" htmlFor=\"password2\">\r\n                        Password\r\n                      </Label>\r\n                      <Input\r\n                        placeholder=\"Enter password again\"\r\n                        type=\"password\"\r\n                        value={password2}\r\n                        onChangeHandler={(value) => setPassword2(value)}\r\n                        id=\"password2\"\r\n                        required\r\n                        propsClass='margin-bottom--32'\r\n                      />\r\n\r\n                      <Button type=\"submit\" size='large' color='success'>\r\n                        Register\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { FC } from 'react';\r\nimport {Button, Image} from '../../commonComponents';\r\nimport { formatTime } from '../../helperFunctions';\r\nimport { H2, P1, P2 } from '../typography';\r\nimport { PostType } from '../../store/blog/types';\r\nimport { UserType } from '../../store/user';\r\nimport style from './post.module.scss';\r\n\r\ntype Props = {\r\n  user: UserType;\r\n  post: PostType;\r\n  handlePostEdit: () => void;\r\n  handleToHomePage: () => void;\r\n  deletePostHandler: () => void;\r\n};\r\n\r\nconst Post: FC<Props> = ({ post, user, handlePostEdit, handleToHomePage, deletePostHandler }) => {\r\n  const { title, image, category, body, author, updated } = post;\r\n\r\n  return (\r\n    <div className={style.post}>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          <Button handleClick={handleToHomePage} color=\"success\">\r\n            Back to Blogs\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-xs-12\">\r\n          <H2>{title}</H2>\r\n        </div>\r\n        <div className=\"col-xs-6\">\r\n          <Image src={image} alt={title} />\r\n        </div>\r\n        <div className=\"col-xs-6\">\r\n          <div className=\"row end-xs\">\r\n            <div className=\"col-xs-12\">\r\n              {(user.username?.toLowerCase() === author.toLowerCase() || user.status==='admin') && (\r\n                <Button handleClick={handlePostEdit} color=\"success\">\r\n                  Edit post\r\n                </Button>\r\n              )}\r\n            </div>\r\n            <div className=\"col-xs-12\">\r\n              {user.status === 'admin' && (\r\n                <Button handleClick={deletePostHandler} size=\"small\" color=\"warning\">Delete post</Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <P2>\r\n            Author :{' '}\r\n            <em>\r\n              {author}\r\n              {'  '}\r\n            </em>\r\n          </P2>\r\n          <P2>\r\n            category:{' '}\r\n            {category.map((cat) => (\r\n              <em key={cat}>#{cat} </em>\r\n            ))}\r\n          </P2>\r\n          <P2>\r\n            Updated :{' '}\r\n            <em>\r\n              {formatTime(updated)}\r\n              {',  '}\r\n            </em>\r\n          </P2>\r\n        </div>\r\n        <div className=\"col-xs-12\">\r\n          <P1>{body}</P1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport sampleSize  from 'lodash/sampleSize';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Image} from '../../commonComponents';\r\nimport { H2, H3, H5, P2 } from '../typography';\r\nimport { PostType } from '../../store/blog';\r\nimport { RootState } from '../../store';\r\nimport style from './smallPosts.module.scss';\r\n\r\ntype Props = {\r\n  post: PostType;\r\n  id: string;\r\n};\r\n\r\nconst SmallPosts: FC<Props> = ({ post, id }) => {\r\n  const [threePosts, setThreePosts] = useState<PostType[]>([]);\r\n  const history = useHistory();\r\n\r\n  const sameCategoryPosts = useSelector((state: RootState) =>\r\n    state.blogPosts.filter((eachPost) =>\r\n      eachPost.category.some(\r\n        (category: string) => category === post?.category[0] || category === post?.category[1]\r\n      )\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n    setThreePosts(sampleSize(sameCategoryPosts, 3));\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className={style.smallPosts}>\r\n      <H2>Similar category posts</H2>\r\n      <div className=\"row center-xs\">\r\n        {threePosts.length === 1 ? (\r\n          <H3>No similar posts...</H3>\r\n        ) : (\r\n          <>\r\n            {threePosts.map(({ postId, image, title, author, category }) => (\r\n              <div className=\"col-xs-4\" key={postId}>\r\n                <div className={style.smallPostCard} key={postId}>\r\n                  <Image src={image} alt={title} />\r\n                  <H5>{title.substring(0, 50)}</H5>\r\n                  <P2>\r\n                    category:{' '}\r\n                    {category.map((cat: string) => (\r\n                      <em key={cat}>{cat} </em>\r\n                    ))}\r\n                  </P2>\r\n                  <P2>author:<em> {author}</em></P2>\r\n                  <Button type=\"button\" handleClick={() => history.push(`/blog/${postId}`)}>\r\n                    Read more...\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmallPosts;\r\n","import React, { FC } from 'react';\r\nimport { PostType } from '../../store/blog/types';\r\nimport { UserType } from '../../store/user';\r\nimport { Button, Textarea } from '../../commonComponents';\r\nimport { H2, H3, P2 } from '../typography';\r\nimport style from './comments.module.scss';\r\n\r\ntype Props = {\r\n  post: PostType;\r\n  user: UserType;\r\n  inputCommentValue: string;\r\n  deleteCommentHandler: (commentId: string) => void;\r\n  commentHandler: () => void;\r\n  commentValueHandler: (e: string) => void;\r\n};\r\n\r\nconst Comments: FC<Props> = ({\r\n  post,\r\n  user,\r\n  deleteCommentHandler,\r\n  inputCommentValue,\r\n  commentHandler,\r\n  commentValueHandler,\r\n}) => {\r\n  const { comments } = post;\r\n\r\n  return (\r\n    <div className={style.comments}>\r\n      <H2>Comments</H2>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12\">\r\n          {comments.map(({ commentId, email, body }) => (\r\n            <div className={style.commentCard} key={commentId}>\r\n              <div className=\"col-xs-4\">\r\n                <P2>{email}</P2>\r\n                {user.status === 'admin' && (\r\n                  <Button\r\n                    handleClick={() => deleteCommentHandler(commentId)}\r\n                    size=\"small\"\r\n                    color=\"warning\"\r\n                  >\r\n                    Delete comment\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className=\"col-xs-8\">\r\n                <P2>{body}</P2>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"row center-xs\">\r\n        {user.email ? (\r\n          <div className=\"col-xs-12\">\r\n            <Textarea\r\n              required\r\n              id=\"textarea\"\r\n              placeholder=\"Add comment here...\"\r\n              value={inputCommentValue}\r\n              rows={3}\r\n              onChangeHandler={commentValueHandler}\r\n            >\r\n              {inputCommentValue}\r\n            </Textarea>\r\n            <Button handleClick={() => commentHandler()}>Save Comment</Button>\r\n          </div>\r\n        ) : (\r\n          <H3> You need to login to comment...</H3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { addCommentHandler, deleteCommentAction, deletePostAction, Comment } from '../store/blog';\r\nimport Post from '../components/post';\r\nimport SmallPosts from '../components/smallPosts';\r\nimport Comments from '../components/comments';\r\nimport { MainBody } from '../commonComponents';\r\nimport { H1 } from '../components/typography';\r\n\r\ntype PostId = {\r\n  postId: string;\r\n};\r\n\r\nconst PostPage = () => {\r\n  const [commentValue, setCommentValue] = useState('');\r\n\r\n  const { postId } = useParams<PostId>();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { post, loading, user } = useSelector((state: RootState) => ({\r\n    post: state.blogPosts.find((blogPost) => blogPost.postId === postId),\r\n    loading: state.loading,\r\n    user: state.user,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n    if (!post) {\r\n      history.push('/notfound');\r\n    }\r\n  }, [postId]);\r\n\r\n  const commentHandler = () => {\r\n    if (!commentValue) {\r\n      alert('empty comment');\r\n      return;\r\n    }\r\n    const newComment: Comment = {\r\n      commentId: uuidv4(),\r\n      postId,\r\n      email: 'comment@email.com',\r\n      body: commentValue,\r\n    };\r\n    dispatch(addCommentHandler(newComment));\r\n    setCommentValue('');\r\n  };\r\n  const deletePostHandler = () => {\r\n    if (window.confirm('Are you sure want to delete post?')) {\r\n      dispatch(deletePostAction(postId));\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const deleteCommentHandler = (commentId: string) => {\r\n    window.confirm('Are you sure want to delete post?') &&\r\n      dispatch(deleteCommentAction(commentId, postId));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <H1>loading...</H1>;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Post Page</H1>\r\n            {post && (\r\n              <>\r\n                <Post\r\n                  post={post}\r\n                  user={user}\r\n                  deletePostHandler={deletePostHandler}\r\n                  handleToHomePage={() => history.push('/')}\r\n                  handlePostEdit={() => history.push(`/editpost/${post.postId}`)}\r\n                />\r\n\r\n                <SmallPosts id={postId} post={post} />\r\n                <Comments\r\n                  post={post}\r\n                  user={user}\r\n                  inputCommentValue={commentValue}\r\n                  deleteCommentHandler={deleteCommentHandler}\r\n                  commentHandler={commentHandler}\r\n                  commentValueHandler={(value) => setCommentValue(value)}\r\n                />\r\n              </>\r\n            )}\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { FC, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Datalist, Form, Image, Input, Label, Textarea } from '../../commonComponents';\r\nimport { RootState } from '../../store';\r\n\r\ntype Props = {\r\n  SavePostHandler: (\r\n    e: React.FormEvent<HTMLFormElement>,\r\n    title: string,\r\n    body: string,\r\n    image: string,\r\n    category1: string,\r\n    category2: string\r\n  ) => void;\r\n  handleCancel: () => void;\r\n};\r\n\r\nconst categories: string[] = [];\r\n\r\nconst PostEditor: FC<Props> = ({ SavePostHandler, handleCancel }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [image, setImage] = useState('https://picsum.photos/200/300');\r\n  const [category1, setCategory1] = useState('');\r\n  const [category2, setCategory2] = useState('');\r\n  const posts = useSelector((state: RootState) => state.blogPosts);\r\n\r\n  const { postId } = useParams<{ postId: string }>();\r\n\r\n  useEffect(() => {\r\n    const post = posts.find((onePost) => onePost.postId === postId);\r\n    if (post) {\r\n      setTitle(post?.title);\r\n      setBody(post?.body);\r\n      setImage(post?.image);\r\n      setCategory1(post?.category[0]);\r\n      setCategory2(post?.category[1]);\r\n    }\r\n  }, []);\r\n\r\n  posts.forEach((post) =>\r\n    post.category.forEach((cat) => {\r\n      if (!categories.includes(cat)) {\r\n        categories.push(cat);\r\n      }\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row center-xs\">\r\n        <div className=\"col-xs-10\">\r\n          <Form\r\n            handleSubmit={(e: React.FormEvent<HTMLFormElement>) =>\r\n              SavePostHandler(e, title, body, image, category1, category2)\r\n            }\r\n          >\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-11\">\r\n                <Label htmlFor=\"title\">Title</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={title}\r\n                  required\r\n                  onChangeHandler={(value) => setTitle(value)}\r\n                  focus\r\n                />\r\n              </div>\r\n              <div className=\"col-xs-3\">\r\n                <Image src={image} alt=\"add image\" />\r\n              </div>\r\n              <div className=\"col-xs-8\">\r\n                <Label htmlFor=\"image\">Image</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"image\"\r\n                  placeholder=\"Image link\"\r\n                  value={image}\r\n                  required\r\n                  onChangeHandler={(value) => setImage(value)}\r\n                />\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-6\">\r\n                    <Label htmlFor=\"category1\">First category</Label>\r\n                    <Input\r\n                      value={category1}\r\n                      type=\"text\"\r\n                      list=\"data1\"\r\n                      id=\"category1\"\r\n                      placeholder=\"Category\"\r\n                      required\r\n                      onChangeHandler={(value) => setCategory1(value)}\r\n                    />\r\n                    <Datalist data={categories} id=\"data1\" />\r\n                  </div>\r\n                  <div className=\"col-xs-6\">\r\n                    <Label htmlFor=\"category2\">Second category</Label>\r\n                    <Input\r\n                      value={category2}\r\n                      type=\"text\"\r\n                      list=\"data2\"\r\n                      id=\"category2\"\r\n                      placeholder=\"Category\"\r\n                      required\r\n                      onChangeHandler={(value) => setCategory2(value)}\r\n                    />\r\n                    <Datalist data={categories} id=\"data2\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row center-xs\">\r\n              <div className=\"col-xs-11\">\r\n                <Label htmlFor=\"textarea\">Body</Label>\r\n                <Textarea\r\n                  required\r\n                  id=\"textarea\"\r\n                  placeholder=\"My story starts here...\"\r\n                  value={body}\r\n                  onChangeHandler={(value) => setBody(value)}\r\n                >\r\n                  {body}\r\n                </Textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <Button size=\"large\" color=\"success\" type=\"submit\">\r\n              Save{' '}\r\n            </Button>\r\n            <Button size=\"large\" color=\"success\" handleClick={handleCancel}>\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostEditor;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MainBody } from '../commonComponents';\r\nimport PostEditor from '../components/postEditor';\r\nimport { H1 } from '../components/typography';\r\nimport { AddPostAction, PostType } from '../store/blog';\r\nimport { RootState } from '../store';\r\n\r\nconst NewPost = () => {\r\n  const loggedUser = useSelector((state: RootState) => state.user.username);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const SavePostHandler = (\r\n    e: React.FormEvent<HTMLFormElement>,\r\n    title: string,\r\n    body: string,\r\n    image: string,\r\n    category1: string,\r\n    category2: string\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    if (loggedUser) {\r\n      const newPost: PostType = {\r\n        postId: uuidv4(),\r\n        title,\r\n        body,\r\n        author: loggedUser,\r\n        image,\r\n        updated: Date.now(),\r\n        category: [category1, category2],\r\n        comments: [],\r\n      };\r\n      dispatch(AddPostAction(newPost));\r\n      \r\n      const localPosts: PostType[] = JSON.parse(localStorage.blogPosts || '[]');\r\n      localPosts.push(newPost);\r\n      localStorage.blogPosts = JSON.stringify(localPosts);\r\n\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This Is New Post Page</H1>\r\n            <PostEditor SavePostHandler={SavePostHandler} handleCancel={handleCancel} />\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { RootState } from '../store';\r\nimport { PostType, EditPostAction } from '../store/blog';\r\nimport { MainBody } from '../commonComponents';\r\nimport PostEditor from '../components/postEditor';\r\nimport { H1 } from '../components/typography';\r\n\r\n\r\nconst EditPost = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { postId } = useParams<{ postId: string }>();\r\n\r\n  const { post, loggedUser } = useSelector((state: RootState) => ({\r\n    post: state.blogPosts.find((onePost) => onePost.postId === postId),\r\n    loggedUser: state.user.username,\r\n  }));\r\n\r\n  const SavePostHandler = (\r\n    e: React.FormEvent<HTMLFormElement>,\r\n    title: string,\r\n    body: string,\r\n    image: string,\r\n    category1: string,\r\n    category2: string\r\n  ) => {\r\n    e.preventDefault();\r\n    if (loggedUser && post) {\r\n      const newPost: PostType = {\r\n        postId: post.postId,\r\n        title,\r\n        body,\r\n        author: loggedUser,\r\n        image,\r\n        updated: Date.now(),\r\n        category: [category1, category2],\r\n        comments: post.comments,\r\n      };\r\n      dispatch(EditPostAction(newPost));\r\n\r\n      const localPosts:PostType[] = JSON.parse(localStorage.blogPosts || '[]');\r\n      const localPostIndex = localPosts.findIndex(localPost => localPost.postId === post.postId);\r\n      localPosts.splice(localPostIndex, 1, newPost);\r\n      localStorage.blogPosts = JSON.stringify(localPosts);\r\n      \r\n      history.push(`/blog/${postId}`);\r\n    }\r\n  };\r\n  const handleCancel = () => {\r\n    history.push(`/blog/${postId}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This EDIT Post Page</H1>\r\n            <PostEditor SavePostHandler={SavePostHandler} handleCancel={handleCancel} />\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","import React from 'react';\r\nimport { Image, MainBody } from '../commonComponents';\r\nimport { H1 } from '../components/typography';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-10 col-xs-offset-1\">\r\n          <MainBody>\r\n            <H1>This is Not Found Page</H1>\r\n            <Image src=\"https://previews.123rf.com/images/abirvalg/abirvalg1301/abirvalg130100004/17628381-404-error-illustration-yellow-quot-wet-floor-quot-style-sign.jpg\" />\r\n          </MainBody>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React, { FC, useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Header } from './components/header';\nimport { users } from './data/users';\nimport { addBlogPosts, getPostsData } from './store/blog/action';\nimport { addUser } from './store/user/action';\nimport Login from './pages/login';\nimport Blog from './pages/blog';\nimport RegisterPage from './pages/register';\nimport PostPage from './pages/post';\nimport NewPost from './pages/newPost';\nimport EditPost from './pages/editPost';\nimport NotFoundPage from './pages/notFound';\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    const localUsers = JSON.parse(localStorage.usersBlog || '[]');\n    const localPosts = JSON.parse(localStorage.blogPosts || '[]');\n    const currentUser = JSON.parse(localStorage.usersBlogUser || '{}');\n\n    if (localUsers.length === 0) {\n      localStorage.usersBlog = JSON.stringify(users);\n    }\n    \n    if (localPosts.length === 0) {\n      dispatch(getPostsData());\n    } else {\n      dispatch(addBlogPosts(localPosts));\n    }\n\n    dispatch(addUser(currentUser));\n  }, []);\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/newpost\">\n          <NewPost />\n        </Route>\n        <Route exact path=\"/editpost/:postId\">\n          <EditPost />\n        </Route>\n        <Route exact path=\"/blog/:postId\">\n          <PostPage />\n        </Route>\n        <Route exact path=\"/notfound\">\n          <NotFoundPage />\n        </Route>\n        <Route exact path=\"/\">\n          <Blog />\n        </Route>\n        <Redirect to=\"/notfound\" />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrapper\":\"image_imageWrapper__2iVIx\",\"image\":\"image_image__2hpXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallPosts\":\"smallPosts_smallPosts__w6ZOq\",\"smallPostCard\":\"smallPosts_smallPostCard__3cm_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"comments_comments__vhopa\",\"commentCard\":\"comments_commentCard__Jd_3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3RoOj\"};"],"sourceRoot":""}